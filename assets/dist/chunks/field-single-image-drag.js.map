{"version":3,"file":"field-single-image-drag.js","sources":["../../src/module/field-single-image-drag.ts"],"sourcesContent":["\nimport { useHttpClient } from '../composable';\nimport { __, injectCssToDocument, selectAll, simpleAlert } from '../service';\nimport { mergeDeep } from '../utilities';\nimport css from '../../scss/field/single-image-drag.scss?inline';\nimport { Modal } from 'bootstrap';\nimport type Cropper from 'cropperjs';\nimport { ApiReturn } from './http-client';\n\ninjectCssToDocument(css);\n\nexport interface SingleImageDragOptions {\n  accept: string | string[];\n  ajax_url?: string;\n  crop: boolean;\n  width: number;\n  height: number;\n  max_width?: number;\n  min_width?: number;\n  max_height?: number;\n  min_height?: number;\n  modalTarget: string;\n}\n\nconst defaultOptions: Partial<SingleImageDragOptions> = {\n  accept: [\n    'image/jpeg',\n    'image/png',\n    'image/webp',\n    'image/avif',\n    'image/gif',\n  ],\n  crop: false,\n  width: 800,\n  height: 800,\n};\n\nexport class SingleImageDragElement extends HTMLElement {\n  static is = 'uni-sid';\n\n  currentImage = '';\n  currentFile: File | undefined = undefined;\n  lastZoom = 0;\n  valueBackup = '';\n\n  private options!: SingleImageDragOptions;\n  private valueInput!: HTMLInputElement;\n  private fileInput!: HTMLInputElement;\n  private selectButton!: HTMLButtonElement;\n  private pasteButton!: HTMLButtonElement;\n  private dragarea!: HTMLDivElement;\n  private previewImage!: HTMLImageElement;\n  private removeCheckbox!: HTMLInputElement;\n  private modalElement!: HTMLDivElement;\n  private modal!: Modal;\n  private cropContainer!: HTMLDivElement;\n  private savebutton!: HTMLButtonElement;\n  private modalToolbarButtons!: NodeListOf<HTMLButtonElement>;\n  private cropper!: Cropper;\n\n  constructor() {\n    super();\n  }\n\n  connectedCallback() {\n    this.options = mergeDeep(\n      {},\n      defaultOptions,\n      JSON.parse(this.getAttribute('options') || '{}')\n    );\n\n    this.valueInput = this.querySelector<HTMLInputElement>('[data-field-input]')!;\n    this.fileInput = this.querySelector<HTMLInputElement>('[data-sid=file]')!;\n    this.selectButton = this.querySelector<HTMLButtonElement>('[data-sid=select]')!;\n    this.pasteButton = this.querySelector<HTMLButtonElement>('[data-sid=paste]')!;\n    this.dragarea = this.querySelector<HTMLDivElement>('[data-sid=dragarea]')!;\n    this.previewImage = this.querySelector<HTMLImageElement>('[data-sid=preview]')!;\n    this.removeCheckbox = this.querySelector<HTMLInputElement>('[data-sid=remove]')!;\n\n    this.modalElement = document.querySelector<HTMLDivElement>(this.options.modalTarget)!;\n    this.modal = Modal.getOrCreateInstance(this.modalElement);\n    this.cropContainer = this.modalElement.querySelector<HTMLDivElement>('[data-sid=\"crop-container\"]')!;\n    this.savebutton = this.modalElement.querySelector<HTMLButtonElement>('[data-sid=save-button]')!;\n    this.modalToolbarButtons = this.modalElement.querySelectorAll<HTMLButtonElement>('[data-sid-toolbar]');\n\n    const modalShown = async () => {\n      const cropper = await this.getCropper();\n      cropper.replace(this.currentImage);\n      this.cropContainer.style.visibility = '';\n      this.currentImage = '';\n    };\n\n    this.modalElement.addEventListener('shown.bs.modal', modalShown.bind(this));\n\n    this.savebutton.addEventListener('click', () => {\n      this.saveCropped();\n      this.modal.hide();\n    });\n\n    this.bindEvents();\n\n    this.style.visibility = '';\n  }\n\n  bindEvents() {\n    this.dragarea.addEventListener('dragover', (event) => {\n      event.stopPropagation();\n      event.preventDefault();\n\n      this.dragarea.classList.add('hover');\n    });\n\n    this.dragarea.addEventListener('dragleave', (event) => {\n      event.stopPropagation();\n      event.preventDefault();\n\n      this.dragarea.classList.remove('hover');\n    });\n\n    this.dragarea.addEventListener('drop', (event) => {\n      event.stopPropagation();\n      event.preventDefault();\n\n      this.dragarea.classList.remove('hover');\n\n      const files = (event.target as HTMLInputElement).files || event.dataTransfer?.files || [];\n      this.handleFileSelect(files[0]);\n    });\n\n    // Select button\n    this.selectButton.addEventListener('click', () => {\n      const input = document.createElement('input');\n      input.setAttribute('type', 'file');\n      input.setAttribute('accept', this.getInputAccept());\n      input.style.display = 'none';\n      input.addEventListener('change', (e) => {\n        this.handleFileSelect(input.files![0]!);\n\n        input.remove();\n      });\n\n      document.body.appendChild(input);\n      input.click();\n    });\n\n    this.pasteButton.addEventListener('click', () => {\n      navigator.clipboard.read().then((items) => {\n        let types = items[0].types;\n\n        if (types.length === 0) {\n          this.alert('This browser unable to get clipboard data.');\n          return;\n        }\n\n        types = types.slice().sort();\n\n        const type = types[0];\n\n        items[0].getType(type).then((blob) => {\n          this.handleFileSelect(new File([ blob ], 'image.png', { type }));\n        });\n      });\n    });\n\n    // Delete\n    this.removeCheckbox?.addEventListener('click', () => {\n      if (this.removeCheckbox.checked) {\n        this.valueBackup = this.valueInput.value;\n        this.valueInput.value = '';\n      } else {\n        this.valueInput.value = this.valueBackup;\n        this.valueBackup = '';\n      }\n    });\n\n    // Zoom slider\n    selectAll(this.modalToolbarButtons, (button) => {\n      button.addEventListener('click', (event) => {\n        this.toolbarClicked(button, event);\n      });\n    });\n  }\n\n  getInputAccept() {\n    let accept = this.options.accept;\n\n    if (Array.isArray(accept)) {\n      accept = accept.join(',');\n    }\n\n    return accept;\n  }\n\n  handleFileSelect(file: File) {\n    if (!this.checkFile(file)) {\n      return;\n    }\n\n    if (this.options.crop) {\n      const reader = new FileReader();\n\n      reader.addEventListener('load', (event) => {\n        this.cropContainer.style.visibility = 'hidden';\n        this.currentImage = event.target!.result as string;\n        this.currentFile = file;\n\n        // After modal shown, cropper will auto load.\n        this.modal.show();\n      });\n\n      reader.readAsDataURL(file);\n      return;\n    }\n\n    this.saveImage(file);\n  }\n\n  async saveCropped() {\n    const Cropper = await this.getCropper();\n\n    Cropper.getCroppedCanvas({\n        width: this.options.width,\n        height: this.options.height,\n        imageSmoothingEnabled: true\n      })\n      .toBlob((blob) => {\n        const file = new File([ blob! ], this.currentFile!.name, { type: 'image/png' });\n        this.saveImage(file);\n      }, 'image/png');\n  }\n\n  async getCropper() {\n    if (this.cropper) {\n      return this.cropper;\n    }\n\n    const Cropper = await loadCropper();\n\n    return this.cropper = new Cropper(this.cropContainer.querySelector('img')!, {\n      aspectRatio: this.options.width / this.options.height,\n      autoCropArea: 1,\n      viewMode: 1,\n      dragMode: 'move',\n      cropBoxMovable: false,\n      cropBoxResizable: false,\n      ready: (e) => {\n        //\n      },\n    });\n  }\n\n  async toolbarClicked(button: HTMLButtonElement, event: MouseEvent) {\n    const cropper = await this.getCropper();\n\n    const data = cropper.getData();\n\n    switch (button.dataset.sidToolbar) {\n      case 'zoom-in':\n        cropper.zoom(0.1);\n        break;\n\n      case 'zoom-out':\n        cropper.zoom(-0.1);\n        break;\n\n      case 'rotate-left':\n        cropper.rotate(-90);\n        break;\n\n      case 'rotate-right':\n        cropper.rotate(90);\n        break;\n\n      case 'scale-x':\n        cropper.scaleX(-data.scaleX);\n        break;\n\n      case 'scale-y':\n        cropper.scaleY(-data.scaleY);\n        break;\n    }\n  }\n\n  checkFile(file: File): boolean {\n    let accept = this.options.accept;\n\n    if (typeof accept === 'string') {\n      accept = accept.split(',').map(v => v.trim());\n    }\n\n    if (!accept.length) {\n      return true;\n    }\n\n    let allow = false;\n\n    for (const type of accept) {\n      if (type.indexOf('/') !== -1) {\n        allow = allow || this.compareMimeType(type, file.type);\n      } else {\n        allow = allow || type.toLowerCase() === getFileExtension(file)?.toLowerCase();\n      }\n    }\n\n    if (allow) {\n      return true;\n    }\n\n    this.alert(\n      __('unicorn.field.sid.message.invalid.image.title'),\n      __('unicorn.field.sid.message.invalid.image.desc'),\n      'error'\n    );\n\n    return false;\n  }\n\n  compareMimeType(accept: string, mime: string) {\n    const accept2 = accept.split('/');\n    const mime2 = mime.split('/');\n\n    if (accept2[1] === '*') {\n      return accept2[0] === mime2[0];\n    }\n\n    return accept === mime;\n  }\n\n  checkSize(image: HTMLImageElement): boolean {\n    try {\n      if (this.options.max_width && this.options.max_width < image.width) {\n        throw new Error(__('unicorn.field.sid.message.invalid.size.max.width', this.options.max_width));\n      }\n\n      if (this.options.min_width && this.options.min_width > image.width) {\n        throw new Error(__('unicorn.field.sid.message.invalid.size.min.width', this.options.min_width));\n      }\n\n      if (this.options.max_height && this.options.max_height < image.height) {\n        throw new Error(__('unicorn.field.sid.message.invalid.size.max.height', this.options.max_height));\n      }\n\n      if (this.options.min_height && this.options.min_height > image.height) {\n        throw new Error(__('unicorn.field.sid.message.invalid.size.min.height', this.options.min_height));\n      }\n    } catch (e) {\n      this.alert(\n        __('unicorn.field.sid.message.invalid.size.title'),\n        (e as Error).message,\n        'error'\n      );\n\n      return false;\n    }\n\n    return true;\n  }\n\n  alert(title: string, text = '', type = 'info') {\n    return simpleAlert(title, text, type);\n  }\n\n  async saveImage(file: File) {\n    if (this.options.ajax_url) {\n      const loading = this.querySelector<HTMLImageElement>('[data-sid=file-uploading]')!;\n\n      this.previewImage.src = '';\n      this.previewImage.style.display = 'none';\n      loading.style.display = 'flex';\n\n      try {\n        const res = await this.uploadImage(file);\n\n        this.storeValue(res.data.data.url, res.data.data.url);\n      } catch (e) {\n        console.error(e);\n        simpleAlert((e as Error).message);\n        return;\n      } finally {\n        loading.style.display = 'none';\n      }\n\n      return;\n    }\n\n    // @see https://stackoverflow.com/a/47172409\n    // @see https://stackoverflow.com/a/47522812\n    const dt = new DataTransfer();\n    dt.items.add(file);\n\n    // No required for value input to remove validation message\n    this.valueInput.required = false;\n\n    this.fileInput.files = dt.files;\n    this.fileInput.dispatchEvent(new CustomEvent('change', { bubbles: true }));\n    this.fileInput.dispatchEvent(new CustomEvent('input', { bubbles: true }));\n\n    this.storeValue('', URL.createObjectURL(file));\n  }\n\n  async uploadImage(file: File) {\n    const formData = new FormData();\n    formData.append('file', file);\n\n    const { post } = await useHttpClient();\n\n    return post<ApiReturn<{ url: string; }>>(this.options.ajax_url!, formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    });\n  }\n\n  storeValue(url: string, preview: string) {\n    this.previewImage.src = preview;\n    this.previewImage.style.display = 'inline-block';\n\n    // Make delete box unchecked\n    if (this.removeCheckbox) {\n      this.removeCheckbox.checked = false;\n    }\n\n    if (url) {\n      this.valueInput.value = url;\n    }\n\n    // Trigger change\n    this.previewImage.dispatchEvent(new CustomEvent('change', { bubbles: true }));\n    this.valueInput.dispatchEvent(new CustomEvent('change', { bubbles: true }));\n    this.valueInput.dispatchEvent(new CustomEvent('input', { bubbles: true }));\n  }\n}\n\n// Promise.all([\n//   import('@cropperjs/cropper.min.js'),\n//   import('@cropperjs/cropper.css'),\n// ])\n//   .then((service) => {\n//     const styleSheet = service[1].default;\n//     document.adoptedStyleSheets = [...document.adoptedStyleSheets, styleSheet];\n//   });\n\ncustomElements.define(SingleImageDragElement.is, SingleImageDragElement);\n\nfunction getFileExtension(file: File): string | undefined {\n  const parts = file.name.split('.');\n  if (parts.length > 1) {\n    return parts.pop();\n  }\n  return undefined;\n}\n\nasync function loadCropper(): Promise<typeof Cropper> {\n  const [module] = await Promise.all([\n    import('cropperjs'),\n    import('cropperjs/dist/cropper.min.css?inline').then(({ default: css }) => {\n      injectCssToDocument(css);\n    })\n  ]);\n\n  return module.default;\n}\n\nloadCropper();\n\nexport interface SingleImageDragModule {\n  SingleImageDragElement: typeof SingleImageDragElement;\n}\n"],"names":["css"],"mappings":"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"}