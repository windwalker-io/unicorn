import { u as useFieldMultiUploader } from "../composable/useFieldMultiUploader.js";
import { u as useTinymce } from "../composable/useTinymce.js";
import { useUnicorn } from "../../unicorn.js";
import { u as useTomSelect } from "../composable/useTomSelect.js";
import { u as useFieldModalTree } from "../composable/useFieldModalTree.js";
import { u as useShowOn } from "../composable/useShowOn.js";
import { u as useIframeModal } from "../composable/useIframeModal.js";
import { u as useS3Uploader } from "../composable/useS3Uploader.js";
import { u as useFieldSingleImageDrag } from "../composable/useFieldSingleImageDrag.js";
import { u as useFieldCascadeSelect } from "../composable/useFieldCascadeSelect.js";
import { u as useFieldModalSelect } from "../composable/useFieldModalSelect.js";
import { u as useFieldFileDrag } from "../composable/useFieldFileDrag.js";
import { u as useFieldFlatpickr } from "../composable/useFieldFlatpickr.js";
import { u as useFieldRepeatable } from "../composable/useFieldRepeatable.js";
function useUnicornPhpAdapter(app) {
  app ??= useUnicorn();
  app.use(UnicornPhpAdapter);
  return app.$ui;
}
const methods = {
  repeatable: useFieldRepeatable,
  flatpickr: useFieldFlatpickr,
  fileDrag: useFieldFileDrag,
  modalField: useFieldModalSelect,
  cascadeSelect: useFieldCascadeSelect,
  sid: useFieldSingleImageDrag,
  tinymce: {
    init: useTinymce
  },
  s3Uploader: useS3Uploader,
  iframeModal: useIframeModal,
  initShowOn: useShowOn,
  modalTree: useFieldModalTree,
  multiUploader: useFieldMultiUploader,
  tomSelect: useTomSelect
};
class UnicornPhpAdapter {
  static install(app) {
    if (app.$ui) {
      app.$ui = { ...app.$ui, ...methods };
    } else {
      app.$ui = methods;
    }
  }
}
export {
  UnicornPhpAdapter as U,
  useUnicornPhpAdapter as u
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGhwLWFkYXB0ZXIuanMiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9wbHVnaW4vcGhwLWFkYXB0ZXIudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHR5cGUgeyBVbmljb3JuQXBwIH0gZnJvbSAnLi4vYXBwJztcclxuaW1wb3J0IHtcclxuICB1c2VGaWVsZENhc2NhZGVTZWxlY3QsXHJcbiAgdXNlRmllbGRGaWxlRHJhZyxcclxuICB1c2VGaWVsZEZsYXRwaWNrcixcclxuICB1c2VGaWVsZE1vZGFsU2VsZWN0LCB1c2VGaWVsZE1vZGFsVHJlZSxcclxuICB1c2VGaWVsZFJlcGVhdGFibGUsXHJcbiAgdXNlRmllbGRTaW5nbGVJbWFnZURyYWcsXHJcbiAgdXNlSWZyYW1lTW9kYWwsIHVzZVMzVXBsb2FkZXIsXHJcbiAgdXNlU2hvd09uLCB1c2VUb21TZWxlY3QsXHJcbn0gZnJvbSAnLi4vY29tcG9zYWJsZSc7XHJcbmltcG9ydCB7IHVzZUZpZWxkTXVsdGlVcGxvYWRlciB9IGZyb20gJy4uL2NvbXBvc2FibGUvdXNlRmllbGRNdWx0aVVwbG9hZGVyJztcclxuaW1wb3J0IHsgdXNlVGlueW1jZSB9IGZyb20gJy4uL2NvbXBvc2FibGUvdXNlVGlueW1jZSc7XHJcbmltcG9ydCB7IHVzZVVuaWNvcm4gfSBmcm9tICcuLi91bmljb3JuJztcclxuXHJcbmRlY2xhcmUgbW9kdWxlICcuLi9hcHAnIHtcclxuICBleHBvcnQgaW50ZXJmYWNlIFVuaWNvcm5BcHAge1xyXG4gICAgLyoqIEBkZXByZWNhdGVkIE9ubHkgZm9yIGNvZGUgZ2VuZXJhdG9yIHVzZS4gKi9cclxuICAgICR1aTogdHlwZW9mIG1ldGhvZHM7XHJcbiAgfVxyXG59XHJcblxyXG4vLyBAdHMtaWdub3JlXHJcbmRlY2xhcmUgbW9kdWxlICdAd2luZHdhbGtlci1pby91bmljb3JuLW5leHQnIHtcclxuICBleHBvcnQgaW50ZXJmYWNlIFVuaWNvcm5BcHAge1xyXG4gICAgLyoqIEBkZXByZWNhdGVkIE9ubHkgZm9yIGNvZGUgZ2VuZXJhdG9yIHVzZS4gKi9cclxuICAgICR1aTogdHlwZW9mIG1ldGhvZHM7XHJcbiAgfVxyXG59XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gdXNlVW5pY29yblBocEFkYXB0ZXIoYXBwPzogVW5pY29ybkFwcCkge1xyXG4gIGFwcCA/Pz0gdXNlVW5pY29ybigpO1xyXG5cclxuICBhcHAudXNlKFVuaWNvcm5QaHBBZGFwdGVyKTtcclxuXHJcbiAgcmV0dXJuIGFwcC4kdWk7XHJcbn1cclxuXHJcbmNvbnN0IG1ldGhvZHMgPSB7XHJcbiAgcmVwZWF0YWJsZTogdXNlRmllbGRSZXBlYXRhYmxlLFxyXG4gIGZsYXRwaWNrcjogdXNlRmllbGRGbGF0cGlja3IsXHJcbiAgZmlsZURyYWc6IHVzZUZpZWxkRmlsZURyYWcsXHJcbiAgbW9kYWxGaWVsZDogdXNlRmllbGRNb2RhbFNlbGVjdCxcclxuICBjYXNjYWRlU2VsZWN0OiB1c2VGaWVsZENhc2NhZGVTZWxlY3QsXHJcbiAgc2lkOiB1c2VGaWVsZFNpbmdsZUltYWdlRHJhZyxcclxuICB0aW55bWNlOiB7XHJcbiAgICBpbml0OiB1c2VUaW55bWNlXHJcbiAgfSxcclxuICBzM1VwbG9hZGVyOiB1c2VTM1VwbG9hZGVyLFxyXG4gIGlmcmFtZU1vZGFsOiB1c2VJZnJhbWVNb2RhbCxcclxuICBpbml0U2hvd09uOiB1c2VTaG93T24sXHJcbiAgbW9kYWxUcmVlOiB1c2VGaWVsZE1vZGFsVHJlZSxcclxuICBtdWx0aVVwbG9hZGVyOiB1c2VGaWVsZE11bHRpVXBsb2FkZXIsXHJcbiAgdG9tU2VsZWN0OiB1c2VUb21TZWxlY3QsXHJcbn07XHJcblxyXG5leHBvcnQgY2xhc3MgVW5pY29yblBocEFkYXB0ZXIge1xyXG4gIHN0YXRpYyBpbnN0YWxsKGFwcDogVW5pY29ybkFwcCkge1xyXG4gICAgaWYgKGFwcC4kdWkpIHtcclxuICAgICAgYXBwLiR1aSA9IHsgLi4uYXBwLiR1aSwgLi4ubWV0aG9kcyB9O1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgYXBwLiR1aSA9IG1ldGhvZHM7XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcbiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7OztBQThCTyxTQUFTLHFCQUFxQixLQUFrQjtBQUNyRCxVQUFRLFdBQUE7QUFFUixNQUFJLElBQUksaUJBQWlCO0FBRXpCLFNBQU8sSUFBSTtBQUNiO0FBRUEsTUFBTSxVQUFVO0FBQUEsRUFDZCxZQUFZO0FBQUEsRUFDWixXQUFXO0FBQUEsRUFDWCxVQUFVO0FBQUEsRUFDVixZQUFZO0FBQUEsRUFDWixlQUFlO0FBQUEsRUFDZixLQUFLO0FBQUEsRUFDTCxTQUFTO0FBQUEsSUFDUCxNQUFNO0FBQUEsRUFBQTtBQUFBLEVBRVIsWUFBWTtBQUFBLEVBQ1osYUFBYTtBQUFBLEVBQ2IsWUFBWTtBQUFBLEVBQ1osV0FBVztBQUFBLEVBQ1gsZUFBZTtBQUFBLEVBQ2YsV0FBVztBQUNiO0FBRU8sTUFBTSxrQkFBa0I7QUFBQSxFQUM3QixPQUFPLFFBQVEsS0FBaUI7QUFDOUIsUUFBSSxJQUFJLEtBQUs7QUFDWCxVQUFJLE1BQU0sRUFBRSxHQUFHLElBQUksS0FBSyxHQUFHLFFBQUE7QUFBQSxJQUM3QixPQUFPO0FBQ0wsVUFBSSxNQUFNO0FBQUEsSUFDWjtBQUFBLEVBQ0Y7QUFDRjsifQ==
