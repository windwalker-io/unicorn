{"version":3,"file":"field-repeatable.js","sources":["../../src/module/field-repeatable.ts"],"sourcesContent":["import { cloneDeep } from 'lodash-es';\r\nimport { initAlpineComponent, prepareAlpineDefer, uid, useCssImport } from '../service';\r\nimport { mergeDeep } from '../utilities';\r\n\r\nexport interface RepeatableOptions {\r\n  id?: string;\r\n  fieldName?: string;\r\n  sortable?: boolean;\r\n  hasKey?: boolean;\r\n  singleArray?: boolean;\r\n  ensureFirstRow?: boolean;\r\n  max?: number | null;\r\n}\r\n\r\nconst defaultOptions: RepeatableOptions = {\r\n  id: '',\r\n  fieldName: '',\r\n  sortable: false,\r\n  hasKey: false,\r\n  singleArray: false,\r\n  ensureFirstRow: false,\r\n  max: null,\r\n};\r\n\r\nfunction prepareItem(item: any) {\r\n  if (item.uid == null) {\r\n    item.uid = uid();\r\n  }\r\n  return item;\r\n}\r\n\r\ntype RepeatableParams = {\r\n  items: Record<string, any>[];\r\n  defaultValues: any;\r\n  attrs: Record<string, any>;\r\n};\r\n\r\nasync function init() {\r\n  await prepareAlpineDefer(async (Alpine) => {\r\n    useCssImport('@vue-animate');\r\n\r\n    Alpine.data('RepeatableField', ({ items, defaultValues, attrs }: RepeatableParams, options: RepeatableOptions) => ({\r\n      items,\r\n      defaultValues,\r\n      attrs,\r\n      options: mergeDeep<RepeatableOptions>(defaultOptions, options),\r\n      init() {\r\n        // this.items = this.items.filter((item) => item !== '__EMPTY_ARRAY__');\r\n\r\n        if (this.options.sortable) {\r\n          // @see https://github.com/alpinejs/alpine/discussions/1635\r\n          import('sortablejs').then(({ default: Sortable }) => {\r\n            Sortable.create(this.$refs.tbody, {\r\n              handle: '.h-handle',\r\n              animation: 300,\r\n              onEnd: (event: any) => {\r\n                // V3 helper to unwrap the proxy\r\n                const items = Alpine.raw(this.items);\r\n\r\n                // splice mutates the original object, which\r\n                // you want to avoid. In this case it works because we\r\n                // created a temporary object that we can control\r\n                // That way we know there are no side effects\r\n                const droppedAtItem = items.splice(event.oldIndex, 1)[0];\r\n                items.splice(event.newIndex, 0, droppedAtItem);\r\n                //\r\n                // // Alpine will update when you modify the state,\r\n                // // so we need to set it back to our new state\r\n                this.items = items;\r\n\r\n                // HACK update prevKeys to new sort order\r\n                let keys = [];\r\n                for (let item of items) {\r\n                  keys.push(item.uid);\r\n                }\r\n\r\n                // HACK update index of dataStack\r\n                // @ts-ignore\r\n                this.$refs.steps_template._x_prevKeys = keys;\r\n                // @ts-ignore\r\n                const elements = this.$refs.steps_template\r\n                  .parentElement\r\n                  .querySelectorAll('tr');\r\n\r\n                [].slice.call(elements).forEach((ele, i) => {\r\n                  // @ts-ignore\r\n                  if (ele?._x_dataStack[0]?.i != null) {\r\n                    // @ts-ignore\r\n                    ele._x_dataStack[0].i = i;\r\n                  }\r\n                });\r\n              }\r\n            });\r\n          });\r\n        }\r\n\r\n        this.items.forEach(prepareItem);\r\n\r\n        if (this.options.ensureFirstRow) {\r\n          this.ensureFirstRow();\r\n        }\r\n      },\r\n\r\n      addItem(i: number) {\r\n        const item = prepareItem(this.getEmptyItem());\r\n\r\n        this.items.splice(i + 1, 0, item);\r\n      },\r\n\r\n      delItem(i: number) {\r\n        const el = this.getItemElementByUID(this.items[i].uid);\r\n        let hasAnimate = false;\r\n\r\n        el?.addEventListener('animationstart', () => {\r\n          hasAnimate = true;\r\n        }, { once: true });\r\n\r\n        el?.classList.add('animate__fadeOut');\r\n\r\n        setTimeout(() => {\r\n          if (!hasAnimate) {\r\n            this._removeItem(i);\r\n          }\r\n        }, 100);\r\n\r\n        el?.addEventListener('animationend', () => {\r\n          this._removeItem(i);\r\n        }, { once: true });\r\n      },\r\n\r\n      _removeItem(i: number) {\r\n        this.items.splice(i, 1);\r\n\r\n        if (this.options.ensureFirstRow) {\r\n          this.ensureFirstRow();\r\n        }\r\n      },\r\n\r\n      ensureFirstRow() {\r\n        if (this.items.length === 0) {\r\n          this.items.push(prepareItem(this.getEmptyItem()));\r\n        }\r\n      },\r\n\r\n      getItemElementByUID(uid: string) {\r\n        return this.$root.querySelector(`[data-item=\"${uid}\"]`);\r\n      },\r\n\r\n      getId(i: number, item: any, field: string) {\r\n        return `${this.id}-${item.uid}-${field}`;\r\n      },\r\n\r\n      getName(i: number, item: any, field: string) {\r\n        if (this.options.singleArray) {\r\n          if (this.options.hasKey) {\r\n            if (field === 'key') {\r\n              return '';\r\n            }\r\n\r\n            return `${this.fieldName}[${item.key}]`;\r\n          }\r\n\r\n          return `${this.fieldName}[]`;\r\n        }\r\n\r\n        return `${this.fieldName}[${i}][${field}]`;\r\n      },\r\n\r\n      getEmptyItem() {\r\n        return cloneDeep(this.defaultValues);\r\n      },\r\n\r\n      get canAdd() {\r\n        if (!this.options.max) {\r\n          return true;\r\n        }\r\n\r\n        return this.options.max > this.items.length;\r\n      },\r\n\r\n      get canModify() {\r\n        return this.attrs.disabled == null && this.attrs.readonly == null;\r\n      },\r\n\r\n      get fieldName() {\r\n        return this.options.fieldName;\r\n      },\r\n\r\n      get id() {\r\n        return this.options.id;\r\n      }\r\n    }));\r\n  });\r\n\r\n  await initAlpineComponent('data-repeatable');\r\n}\r\n\r\nexport const ready = init();\r\n\r\nexport interface RepeatableModule {\r\n  ready: typeof ready;\r\n}\r\n"],"names":["items","uid"],"mappings":"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"}