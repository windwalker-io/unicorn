{"version":3,"file":"field-file-drag.js","sources":["../../src/module/field-file-drag.ts"],"sourcesContent":["import css from '../../scss/field/file-drag.scss?inline';\r\nimport { useUniDirective } from '../composable';\r\nimport { __, html, injectCssToDocument, simpleAlert, uid, watchAttributes } from '../service';\r\nimport { mergeDeep } from '../utilities';\r\n\r\nexport interface FileDragOptions {\r\n  maxFiles: number | undefined;\r\n  maxSize: number | undefined;\r\n  placeholder: string;\r\n  height: number;\r\n}\r\n\r\nconst defaultOptions: FileDragOptions = {\r\n  maxFiles: undefined,\r\n  maxSize: undefined,\r\n  placeholder: '',\r\n  height: 125,\r\n}\r\n\r\nexport class FileDragElement extends HTMLElement {\r\n  static is = 'uni-file-drag';\r\n\r\n  element!: HTMLInputElement;\r\n  overlayLabel!: HTMLLabelElement;\r\n  button!: HTMLButtonElement;\r\n  options!: FileDragOptions;\r\n\r\n  get inputSelector() {\r\n    return this.getAttribute('selector') || 'input[type=file]';\r\n  }\r\n\r\n  get multiple() {\r\n    return this.element.multiple;\r\n  }\r\n\r\n  connectedCallback(): void {\r\n    this.element = this.querySelector(this.inputSelector)!;\r\n\r\n    this.prepareElements();\r\n\r\n    const options = JSON.parse(this.getAttribute('options') || '{}') || {};\r\n\r\n    const observer = watchAttributes(this.element);\r\n    observer.watch('readonly', (el) => {\r\n      el.disabled = el.readOnly;\r\n    });\r\n\r\n    if (this.element.readOnly) {\r\n      this.element.disabled = true;\r\n    }\r\n\r\n    this.options = mergeDeep({}, defaultOptions, options);\r\n\r\n    this.bindEvent();\r\n\r\n    this.style.visibility = '';\r\n\r\n    this.style.height = (this.options.height || 100) + 'px';\r\n  }\r\n\r\n  bindEvent() {\r\n    this.element.addEventListener('dragover', () => {\r\n      this.element.classList.add('hover');\r\n    });\r\n\r\n    this.element.addEventListener('dragleave', () => {\r\n      this.element.classList.remove('hover');\r\n    });\r\n\r\n    this.element.addEventListener('drop', () => {\r\n      this.element.classList.remove('hover');\r\n    });\r\n\r\n    this.onChange();\r\n\r\n    this.element.addEventListener('change', (e) => {\r\n      this.onChange(e);\r\n    });\r\n    this.element.addEventListener('input', (e) => {\r\n      this.onChange(e);\r\n    });\r\n  }\r\n\r\n  prepareElements() {\r\n    if (this.children.length === 0) {\r\n      this.createElementsLayout();\r\n    }\r\n\r\n    this.overlayLabel = this.querySelector<HTMLLabelElement>('[data-overlay-label]')!;\r\n\r\n    let button = this.overlayLabel.querySelector('button');\r\n\r\n    // B/C for new file drag style\r\n    if (!button) {\r\n      button = document.createElement('button');\r\n      button.type = 'button';\r\n      button.setAttribute('class', 'c-file-drag-input__button btn btn-success btn-sm px-2 py-1');\r\n      button.innerText = __('unicorn.field.file.drag.button.text');\r\n      this.overlayLabel.appendChild(button);\r\n    }\r\n\r\n    this.button = button;\r\n  }\r\n\r\n  createElementsLayout() {\r\n    this.id ||= 'c-file-drag-' + uid();\r\n    const name = this.getAttribute('name') || 'file';\r\n    const inputId = this.id + '__input';\r\n    const btnText = __('unicorn.field.file.drag.button.text');\r\n\r\n    const input = html(`<input id=\"${inputId}\" type=\"file\" name=\"${name}\" />`);\r\n    const label = html(`<label class=\"px-3 c-file-drag-input__label\"\r\n        data-overlay-label\r\n        for=\"${inputId}\">\r\n        <span class=\"label-text d-block\">\r\n            <span class=\"fa fa-upload\"></span>\r\n        </span>\r\n        <button type=\"button\" class=\"c-file-drag-input__button btn btn-success btn-sm px-2 py-1\">\r\n            ${btnText}\r\n        </button>\r\n    </label>`);\r\n\r\n    this.element = input as HTMLInputElement;\r\n    this.overlayLabel = label as HTMLLabelElement;\r\n\r\n    this.appendChild(input);\r\n    this.appendChild(label);\r\n  }\r\n\r\n  onChange(evt?: Event) {\r\n    const files = this.element.files || [];\r\n    const limit = this.options.maxFiles;\r\n    const maxSize = this.options.maxSize;\r\n    let placeholder = this.options.placeholder;\r\n\r\n    const accepted = (this.element.getAttribute('accept') || this.element.getAttribute('data-accepted') || '')\r\n      .split(',')\r\n      .map(v => v.trim())\r\n      .filter(v => v.length > 0)\r\n      .map(v => {\r\n        if (v.indexOf('/') === -1 && v[0] === '.') {\r\n          return v.substring(1);\r\n        }\r\n\r\n        return v;\r\n      });\r\n\r\n    let text: string;\r\n\r\n    if (!placeholder) {\r\n      if (this.multiple) {\r\n        placeholder = __('unicorn.field.file.drag.placeholder.multiple');\r\n      } else {\r\n        placeholder = __('unicorn.field.file.drag.placeholder.single');\r\n      }\r\n    }\r\n\r\n    // Files limit\r\n    if (limit && files.length > limit) {\r\n      this.alert(__('unicorn.field.file.drag.message.max.files', limit), '', 'warning');\r\n      evt?.preventDefault();\r\n      return;\r\n    }\r\n\r\n    // Files size\r\n    let fileSize = 0;\r\n    Array.prototype.forEach.call(files, file => {\r\n      this.checkFileType(accepted, file);\r\n\r\n      fileSize += file.size;\r\n    });\r\n\r\n    if (maxSize && (fileSize / 1024 / 1024) > maxSize) {\r\n      this.alert(\r\n        __(\r\n          'unicorn.field.file.drag.message.max.size',\r\n          maxSize < 1 ? (maxSize * 1024) + 'KB' : maxSize + 'MB'\r\n        ),\r\n        '',\r\n        'warning'\r\n      );\r\n      evt?.preventDefault();\r\n      return;\r\n    }\r\n\r\n    if (files.length > 1) {\r\n      text = `<span class=\"fa fa-files fa-copy\"></span> ${__('unicorn.field.file.drag.selected', files.length)}`;\r\n    } else if (files.length === 1) {\r\n      text = `<span class=\"fa fa-file\"></span> ${files[0].name}`;\r\n    } else {\r\n      text = `<span class=\"fa fa-upload\"></span> ${placeholder}`;\r\n    }\r\n\r\n    //replace the \"Choose a file\" label\r\n    this.overlayLabel.querySelector<HTMLSpanElement>('span')!.innerHTML = text;\r\n  }\r\n\r\n  checkFileType(accepted: string[], file: File) {\r\n    const fileExt = file.name.split('.').pop() || '';\r\n\r\n    if (accepted.length) {\r\n      let allow = false;\r\n\r\n      accepted.forEach((type) => {\r\n        if (allow) {\r\n          return;\r\n        }\r\n\r\n        if (type.indexOf('/') !== -1) {\r\n          if (this.compareMimeType(type, file.type)) {\r\n            allow = true;\r\n          }\r\n        } else {\r\n          if (type.toLowerCase() === fileExt.toLowerCase()) {\r\n            allow = true;\r\n          }\r\n        }\r\n      });\r\n\r\n      if (!allow) {\r\n        this.alert(\r\n          __('unicorn.field.file.drag.message.unaccepted.files'),\r\n          __('unicorn.field.file.drag.message.unaccepted.files.desc', accepted.join(', ')),\r\n          'warning'\r\n        );\r\n        throw new Error('Not accepted file ext');\r\n      }\r\n    }\r\n  }\r\n\r\n  compareMimeType(accepted: string, mime: string) {\r\n    const accepted2 = accepted.split('/');\r\n    const mime2 = mime.split('/');\r\n\r\n    if (accepted2[1] === '*') {\r\n      return accepted2[0] === mime2[0];\r\n    }\r\n\r\n    return accepted === mime;\r\n  }\r\n\r\n  async alert(title: string, text: string = '', type: string = 'info') {\r\n    await simpleAlert(title, text, type);\r\n  }\r\n}\r\n\r\nasync function init() {\r\n  injectCssToDocument(document, css);\r\n  customElements.define(FileDragElement.is, FileDragElement);\r\n\r\n return useUniDirective('file-drag-field', {\r\n   mounted(el) {\r\n     const input = el.querySelector<HTMLInputElement>('input[type=file]')!;\r\n     const placeholderInput = el.querySelector<HTMLInputElement>('[data-role=placeholder]')!;\r\n\r\n     const preview = el.querySelector('.c-file-drag-preview');\r\n\r\n     if (preview) {\r\n       const previewLink = preview.querySelector<HTMLAnchorElement>('.c-file-drag-preview__link')!;\r\n       const delButton = preview.querySelector<HTMLAnchorElement>('.c-file-drag-preview__delete')!;\r\n       // let linkTitle = previewLink.textContent;\r\n       let inputValue = placeholderInput.value;\r\n       let required = input.required;\r\n\r\n       if (placeholderInput.value) {\r\n         input.required = false;\r\n       }\r\n\r\n       delButton.addEventListener('click', () => {\r\n         if (delButton.classList.contains('active')) {\r\n           // Restore\r\n           previewLink.style.textDecoration = '';\r\n           previewLink.style.setProperty('color', '');\r\n           placeholderInput.value = inputValue;\r\n           delButton.classList.remove('active');\r\n           input.required = false;\r\n         } else {\r\n           // Delete\r\n           previewLink.style.textDecoration = 'line-through';\r\n           previewLink.style.color = 'var(--fd-delete-color, var(--bs-danger))';\r\n           placeholderInput.value = '';\r\n           delButton.classList.add('active');\r\n           input.required = required;\r\n         }\r\n       });\r\n     }\r\n   }\r\n });\r\n}\r\n\r\nexport const ready = init();\r\n\r\nexport interface FileDragModule {\r\n  FileDragElement: typeof FileDragElement;\r\n}\r\n"],"names":[],"mappings":";;AAYA,MAAM,iBAAkC;AAAA,EACtC,UAAU;AAAA,EACV,SAAS;AAAA,EACT,aAAa;AAAA,EACb,QAAQ;AACV;AAEO,MAAM,wBAAwB,YAAY;AAAA,EAC/C,OAAO,KAAK;AAAA,EAEZ;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EAEA,IAAI,gBAAgB;AAClB,WAAO,KAAK,aAAa,UAAU,KAAK;AAAA,EAC1C;AAAA,EAEA,IAAI,WAAW;AACb,WAAO,KAAK,QAAQ;AAAA,EACtB;AAAA,EAEA,oBAA0B;AACxB,SAAK,UAAU,KAAK,cAAc,KAAK,aAAa;AAEpD,SAAK,gBAAA;AAEL,UAAM,UAAU,KAAK,MAAM,KAAK,aAAa,SAAS,KAAK,IAAI,KAAK,CAAA;AAEpE,UAAM,WAAW,gBAAgB,KAAK,OAAO;AAC7C,aAAS,MAAM,YAAY,CAAC,OAAO;AACjC,SAAG,WAAW,GAAG;AAAA,IACnB,CAAC;AAED,QAAI,KAAK,QAAQ,UAAU;AACzB,WAAK,QAAQ,WAAW;AAAA,IAC1B;AAEA,SAAK,UAAU,UAAU,CAAA,GAAI,gBAAgB,OAAO;AAEpD,SAAK,UAAA;AAEL,SAAK,MAAM,aAAa;AAExB,SAAK,MAAM,UAAU,KAAK,QAAQ,UAAU,OAAO;AAAA,EACrD;AAAA,EAEA,YAAY;AACV,SAAK,QAAQ,iBAAiB,YAAY,MAAM;AAC9C,WAAK,QAAQ,UAAU,IAAI,OAAO;AAAA,IACpC,CAAC;AAED,SAAK,QAAQ,iBAAiB,aAAa,MAAM;AAC/C,WAAK,QAAQ,UAAU,OAAO,OAAO;AAAA,IACvC,CAAC;AAED,SAAK,QAAQ,iBAAiB,QAAQ,MAAM;AAC1C,WAAK,QAAQ,UAAU,OAAO,OAAO;AAAA,IACvC,CAAC;AAED,SAAK,SAAA;AAEL,SAAK,QAAQ,iBAAiB,UAAU,CAAC,MAAM;AAC7C,WAAK,SAAS,CAAC;AAAA,IACjB,CAAC;AACD,SAAK,QAAQ,iBAAiB,SAAS,CAAC,MAAM;AAC5C,WAAK,SAAS,CAAC;AAAA,IACjB,CAAC;AAAA,EACH;AAAA,EAEA,kBAAkB;AAChB,QAAI,KAAK,SAAS,WAAW,GAAG;AAC9B,WAAK,qBAAA;AAAA,IACP;AAEA,SAAK,eAAe,KAAK,cAAgC,sBAAsB;AAE/E,QAAI,SAAS,KAAK,aAAa,cAAc,QAAQ;AAGrD,QAAI,CAAC,QAAQ;AACX,eAAS,SAAS,cAAc,QAAQ;AACxC,aAAO,OAAO;AACd,aAAO,aAAa,SAAS,4DAA4D;AACzF,aAAO,YAAY,GAAG,qCAAqC;AAC3D,WAAK,aAAa,YAAY,MAAM;AAAA,IACtC;AAEA,SAAK,SAAS;AAAA,EAChB;AAAA,EAEA,uBAAuB;AACrB,SAAK,OAAO,iBAAiB,IAAA;AAC7B,UAAM,OAAO,KAAK,aAAa,MAAM,KAAK;AAC1C,UAAM,UAAU,KAAK,KAAK;AAC1B,UAAM,UAAU,GAAG,qCAAqC;AAExD,UAAM,QAAQ,KAAK,cAAc,OAAO,uBAAuB,IAAI,MAAM;AACzE,UAAM,QAAQ,KAAK;AAAA;AAAA,eAER,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA,cAKR,OAAO;AAAA;AAAA,aAER;AAET,SAAK,UAAU;AACf,SAAK,eAAe;AAEpB,SAAK,YAAY,KAAK;AACtB,SAAK,YAAY,KAAK;AAAA,EACxB;AAAA,EAEA,SAAS,KAAa;AACpB,UAAM,QAAQ,KAAK,QAAQ,SAAS,CAAA;AACpC,UAAM,QAAQ,KAAK,QAAQ;AAC3B,UAAM,UAAU,KAAK,QAAQ;AAC7B,QAAI,cAAc,KAAK,QAAQ;AAE/B,UAAM,YAAY,KAAK,QAAQ,aAAa,QAAQ,KAAK,KAAK,QAAQ,aAAa,eAAe,KAAK,IACpG,MAAM,GAAG,EACT,IAAI,CAAA,MAAK,EAAE,KAAA,CAAM,EACjB,OAAO,CAAA,MAAK,EAAE,SAAS,CAAC,EACxB,IAAI,CAAA,MAAK;AACR,UAAI,EAAE,QAAQ,GAAG,MAAM,MAAM,EAAE,CAAC,MAAM,KAAK;AACzC,eAAO,EAAE,UAAU,CAAC;AAAA,MACtB;AAEA,aAAO;AAAA,IACT,CAAC;AAEH,QAAI;AAEJ,QAAI,CAAC,aAAa;AAChB,UAAI,KAAK,UAAU;AACjB,sBAAc,GAAG,8CAA8C;AAAA,MACjE,OAAO;AACL,sBAAc,GAAG,4CAA4C;AAAA,MAC/D;AAAA,IACF;AAGA,QAAI,SAAS,MAAM,SAAS,OAAO;AACjC,WAAK,MAAM,GAAG,6CAA6C,KAAK,GAAG,IAAI,SAAS;AAChF,WAAK,eAAA;AACL;AAAA,IACF;AAGA,QAAI,WAAW;AACf,UAAM,UAAU,QAAQ,KAAK,OAAO,CAAA,SAAQ;AAC1C,WAAK,cAAc,UAAU,IAAI;AAEjC,kBAAY,KAAK;AAAA,IACnB,CAAC;AAED,QAAI,WAAY,WAAW,OAAO,OAAQ,SAAS;AACjD,WAAK;AAAA,QACH;AAAA,UACE;AAAA,UACA,UAAU,IAAK,UAAU,OAAQ,OAAO,UAAU;AAAA,QAAA;AAAA,QAEpD;AAAA,QACA;AAAA,MAAA;AAEF,WAAK,eAAA;AACL;AAAA,IACF;AAEA,QAAI,MAAM,SAAS,GAAG;AACpB,aAAO,6CAA6C,GAAG,oCAAoC,MAAM,MAAM,CAAC;AAAA,IAC1G,WAAW,MAAM,WAAW,GAAG;AAC7B,aAAO,oCAAoC,MAAM,CAAC,EAAE,IAAI;AAAA,IAC1D,OAAO;AACL,aAAO,sCAAsC,WAAW;AAAA,IAC1D;AAGA,SAAK,aAAa,cAA+B,MAAM,EAAG,YAAY;AAAA,EACxE;AAAA,EAEA,cAAc,UAAoB,MAAY;AAC5C,UAAM,UAAU,KAAK,KAAK,MAAM,GAAG,EAAE,SAAS;AAE9C,QAAI,SAAS,QAAQ;AACnB,UAAI,QAAQ;AAEZ,eAAS,QAAQ,CAAC,SAAS;AACzB,YAAI,OAAO;AACT;AAAA,QACF;AAEA,YAAI,KAAK,QAAQ,GAAG,MAAM,IAAI;AAC5B,cAAI,KAAK,gBAAgB,MAAM,KAAK,IAAI,GAAG;AACzC,oBAAQ;AAAA,UACV;AAAA,QACF,OAAO;AACL,cAAI,KAAK,YAAA,MAAkB,QAAQ,eAAe;AAChD,oBAAQ;AAAA,UACV;AAAA,QACF;AAAA,MACF,CAAC;AAED,UAAI,CAAC,OAAO;AACV,aAAK;AAAA,UACH,GAAG,kDAAkD;AAAA,UACrD,GAAG,yDAAyD,SAAS,KAAK,IAAI,CAAC;AAAA,UAC/E;AAAA,QAAA;AAEF,cAAM,IAAI,MAAM,uBAAuB;AAAA,MACzC;AAAA,IACF;AAAA,EACF;AAAA,EAEA,gBAAgB,UAAkB,MAAc;AAC9C,UAAM,YAAY,SAAS,MAAM,GAAG;AACpC,UAAM,QAAQ,KAAK,MAAM,GAAG;AAE5B,QAAI,UAAU,CAAC,MAAM,KAAK;AACxB,aAAO,UAAU,CAAC,MAAM,MAAM,CAAC;AAAA,IACjC;AAEA,WAAO,aAAa;AAAA,EACtB;AAAA,EAEA,MAAM,MAAM,OAAe,OAAe,IAAI,OAAe,QAAQ;AACnE,UAAM,YAAY,OAAO,MAAM,IAAI;AAAA,EACrC;AACF;AAEA,eAAe,OAAO;AACpB,sBAAoB,UAAU,GAAG;AACjC,iBAAe,OAAO,gBAAgB,IAAI,eAAe;AAE1D,SAAO,gBAAgB,mBAAmB;AAAA,IACxC,QAAQ,IAAI;AACV,YAAM,QAAQ,GAAG,cAAgC,kBAAkB;AACnE,YAAM,mBAAmB,GAAG,cAAgC,yBAAyB;AAErF,YAAM,UAAU,GAAG,cAAc,sBAAsB;AAEvD,UAAI,SAAS;AACX,cAAM,cAAc,QAAQ,cAAiC,4BAA4B;AACzF,cAAM,YAAY,QAAQ,cAAiC,8BAA8B;AAEzF,YAAI,aAAa,iBAAiB;AAClC,YAAI,WAAW,MAAM;AAErB,YAAI,iBAAiB,OAAO;AAC1B,gBAAM,WAAW;AAAA,QACnB;AAEA,kBAAU,iBAAiB,SAAS,MAAM;AACxC,cAAI,UAAU,UAAU,SAAS,QAAQ,GAAG;AAE1C,wBAAY,MAAM,iBAAiB;AACnC,wBAAY,MAAM,YAAY,SAAS,EAAE;AACzC,6BAAiB,QAAQ;AACzB,sBAAU,UAAU,OAAO,QAAQ;AACnC,kBAAM,WAAW;AAAA,UACnB,OAAO;AAEL,wBAAY,MAAM,iBAAiB;AACnC,wBAAY,MAAM,QAAQ;AAC1B,6BAAiB,QAAQ;AACzB,sBAAU,UAAU,IAAI,QAAQ;AAChC,kBAAM,WAAW;AAAA,UACnB;AAAA,QACF,CAAC;AAAA,MACH;AAAA,IACF;AAAA,EAAA,CACD;AACF;AAEO,MAAM,QAAQ,qBAAA;"}