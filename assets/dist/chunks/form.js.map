{"version":3,"file":"form.js","sources":["../../src/module/form.ts"],"sourcesContent":["import { data } from '../data';\r\nimport { loadAlpine, useSystemUri } from '../service';\r\nimport type { Nullable } from '../types';\r\n\r\nexport class UnicornFormElement {\r\n  element: HTMLFormElement | undefined;\r\n  options: Record<string, any>;\r\n\r\n  constructor(\r\n    selector?: string | Element,\r\n    element?: HTMLFormElement,\r\n    options: Record<string, any> = {},\r\n  ) {\r\n    // If form not found, create one\r\n    if (!element) {\r\n      element = document.createElement('form');\r\n\r\n      if (typeof selector === 'string' && selector.startsWith('#')) {\r\n        element.setAttribute('id', selector.substring(1));\r\n        element.setAttribute('name', selector.substring(1));\r\n      }\r\n\r\n      element.setAttribute('method', 'post');\r\n      element.setAttribute('enctype', 'multipart/form-data');\r\n      element.setAttribute('novalidate', 'true');\r\n      element.setAttribute('action', useSystemUri('full'));\r\n      element.setAttribute('style', 'display: none;');\r\n\r\n      const csrf = document.createElement('input');\r\n      csrf.setAttribute('type', 'hidden');\r\n      csrf.setAttribute('name', data('csrf-token'));\r\n      csrf.setAttribute('value', '1');\r\n\r\n      element.appendChild(csrf);\r\n      document.body.appendChild(element);\r\n    }\r\n\r\n    this.element = element;\r\n    this.options = { ...options };\r\n  }\r\n\r\n  initComponent(store = 'form', custom = {}) {\r\n    return loadAlpine((Alpine) => {\r\n      Alpine.store(store, this.useState(custom));\r\n    });\r\n  }\r\n\r\n  useState(custom = {}) {\r\n    const state: Record<string, any> = {};\r\n    Object.getOwnPropertyNames(Object.getPrototypeOf(this))\r\n      .map(item => {\r\n        // @ts-ignore\r\n        return state[item] = this[item].bind(this);\r\n      });\r\n\r\n    return Object.assign(\r\n      state,\r\n      custom\r\n    );\r\n  }\r\n\r\n  getElement() {\r\n    return this.element;\r\n  }\r\n\r\n  submit(\r\n    url?: Nullable<string>,\r\n    data?: Nullable<Record<string, any>>,\r\n    method?: Nullable<string>,\r\n    customMethod?: Nullable<string>,\r\n  ): boolean {\r\n    const form = this.element!;\r\n\r\n    if (customMethod) {\r\n      let methodInput = form.querySelector<HTMLInputElement>('input[name=\"_method\"]');\r\n\r\n      if (!methodInput) {\r\n        methodInput = document.createElement('input');\r\n        methodInput.setAttribute('name', '_method');\r\n        methodInput.setAttribute('type', 'hidden');\r\n        methodInput.value = customMethod;\r\n\r\n        form.appendChild(methodInput);\r\n      } else {\r\n        methodInput.value = customMethod;\r\n      }\r\n    }\r\n\r\n    // Set data into form.\r\n    if (data) {\r\n      const flatted = UnicornFormElement.flattenObject(data);\r\n\r\n      for (const key in flatted) {\r\n        const value = flatted[key];\r\n\r\n        const fieldName = UnicornFormElement.buildFieldName(key);\r\n        this.injectInput(fieldName, value);\r\n      }\r\n    }\r\n\r\n    if (url) {\r\n      form.setAttribute('action', url);\r\n    }\r\n\r\n    if (method) {\r\n      form.setAttribute('method', method);\r\n    }\r\n\r\n    // Use requestSubmit() to fire submit event.\r\n    form.requestSubmit();\r\n\r\n    return true;\r\n  }\r\n\r\n  injectInput(name: string, value: any) {\r\n    let input = this.element!.querySelector<HTMLInputElement>(`input[name=\"${name}\"]`);\r\n\r\n    if (!input) {\r\n      input = document.createElement('input');\r\n      input.setAttribute('name', name);\r\n      input.setAttribute('type', 'hidden');\r\n      input.setAttribute('data-role', 'temp-input');\r\n\r\n      this.element!.appendChild(input);\r\n    }\r\n\r\n    input.value = value;\r\n    return input;\r\n  }\r\n\r\n  /**\r\n   * Make a GET request.\r\n   */\r\n  get(\r\n    url?: Nullable<string>,\r\n    data?: Nullable<Record<string, any>>,\r\n    customMethod?: Nullable<string>,\r\n  ): boolean {\r\n    return this.submit(url, data, 'GET', customMethod);\r\n  }\r\n\r\n  /**\r\n   * Post form.\r\n   */\r\n  post(\r\n    url?: Nullable<string>,\r\n    data?: Nullable<Record<string, any>>,\r\n    customMethod?: Nullable<string>,\r\n  ) {\r\n    customMethod = customMethod || 'POST';\r\n\r\n    return this.submit(url, data, 'POST', customMethod);\r\n  }\r\n\r\n  /**\r\n   * Make a PUT request.\r\n   */\r\n  put(\r\n    url?: Nullable<string>,\r\n    data?: Nullable<Record<string, any>>,\r\n  ) {\r\n    return this.post(url, data, 'PUT');\r\n  }\r\n\r\n  /**\r\n   * Make a PATCH request.\r\n   */\r\n  patch(\r\n    url?: Nullable<string>,\r\n    data?: Nullable<Record<string, any>>,\r\n  ) {\r\n    return this.post(url, data, 'PATCH');\r\n  }\r\n\r\n  /**\r\n   * Make a DELETE request.\r\n   */\r\n  delete(\r\n    url?: Nullable<string>,\r\n    data?: Nullable<Record<string, any>>,\r\n  ) {\r\n    return this.post(url, data, 'DELETE');\r\n  }\r\n\r\n  /**\r\n   * @see https://stackoverflow.com/a/53739792\r\n   *\r\n   * @param {Object} ob\r\n   * @returns {Object}\r\n   */\r\n  static flattenObject(ob: Record<string, any>): Record<string, any> {\r\n    const toReturn: Record<string, any> = {};\r\n\r\n    for (let i in ob) {\r\n      if (!ob.hasOwnProperty(i)) {\r\n        continue;\r\n      }\r\n\r\n      if ((typeof ob[i]) === 'object' && ob[i] != null) {\r\n        const flatObject = this.flattenObject(ob[i]);\r\n\r\n        for (let x in flatObject) {\r\n          if (!flatObject.hasOwnProperty(x)) {\r\n            continue;\r\n          }\r\n\r\n          toReturn[i + '/' + x] = flatObject[x];\r\n        }\r\n      } else {\r\n        toReturn[i] = ob[i];\r\n      }\r\n    }\r\n    return toReturn;\r\n  }\r\n\r\n  static buildFieldName(field: string) {\r\n    const names = field.split('/');\r\n\r\n    const first = names.shift();\r\n\r\n    return first + names.map(name => `[${name}]`).join('');\r\n  }\r\n}\r\n"],"names":["data"],"mappings":"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"}