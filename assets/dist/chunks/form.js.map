{"version":3,"file":"form.js","sources":["../../src/module/form.ts"],"sourcesContent":["import { data } from '../data';\nimport { loadAlpine, useSystemUri } from '../service';\nimport type { Nullable } from '../types';\n\nexport class UnicornFormElement {\n  element: HTMLFormElement | undefined;\n  options: Record<string, any>;\n\n  constructor(\n    selector?: string | Element,\n    element?: HTMLFormElement,\n    options: Record<string, any> = {},\n  ) {\n    // If form not found, create one\n    if (!element) {\n      element = document.createElement('form');\n\n      if (typeof selector === 'string' && selector.startsWith('#')) {\n        element.setAttribute('id', selector.substring(1));\n        element.setAttribute('name', selector.substring(1));\n      }\n\n      element.setAttribute('method', 'post');\n      element.setAttribute('enctype', 'multipart/form-data');\n      element.setAttribute('novalidate', 'true');\n      element.setAttribute('action', useSystemUri('full'));\n      element.setAttribute('style', 'display: none;');\n\n      const csrf = document.createElement('input');\n      csrf.setAttribute('type', 'hidden');\n      csrf.setAttribute('name', data('csrf-token'));\n      csrf.setAttribute('value', '1');\n\n      element.appendChild(csrf);\n      document.body.appendChild(element);\n    }\n\n    this.element = element;\n    this.options = { ...options };\n  }\n\n  initComponent(store = 'form', custom = {}) {\n    return loadAlpine((Alpine) => {\n      Alpine.store(store, this.useState(custom));\n    });\n  }\n\n  useState(custom = {}) {\n    const state: Record<string, any> = {};\n    Object.getOwnPropertyNames(Object.getPrototypeOf(this))\n      .map(item => {\n        // @ts-ignore\n        return state[item] = this[item].bind(this);\n      });\n\n    return Object.assign(\n      state,\n      custom\n    );\n  }\n\n  getElement() {\n    return this.element;\n  }\n\n  submit(\n    url?: Nullable<string>,\n    data?: Nullable<Record<string, any>>,\n    method?: Nullable<string>,\n    customMethod?: Nullable<string>,\n  ): boolean {\n    const form = this.element!;\n\n    if (customMethod) {\n      let methodInput = form.querySelector<HTMLInputElement>('input[name=\"_method\"]');\n\n      if (!methodInput) {\n        methodInput = document.createElement('input');\n        methodInput.setAttribute('name', '_method');\n        methodInput.setAttribute('type', 'hidden');\n        methodInput.value = customMethod;\n\n        form.appendChild(methodInput);\n      } else {\n        methodInput.value = customMethod;\n      }\n    }\n\n    // Set data into form.\n    if (data) {\n      const flatted = UnicornFormElement.flattenObject(data);\n\n      for (const key in flatted) {\n        const value = flatted[key];\n\n        const fieldName = UnicornFormElement.buildFieldName(key);\n        this.injectInput(fieldName, value);\n      }\n    }\n\n    if (url) {\n      form.setAttribute('action', url);\n    }\n\n    if (method) {\n      form.setAttribute('method', method);\n    }\n\n    // Use requestSubmit() to fire submit event.\n    form.requestSubmit();\n\n    return true;\n  }\n\n  injectInput(name: string, value: any) {\n    let input = this.element!.querySelector<HTMLInputElement>(`input[name=\"${name}\"]`);\n\n    if (!input) {\n      input = document.createElement('input');\n      input.setAttribute('name', name);\n      input.setAttribute('type', 'hidden');\n      input.setAttribute('data-role', 'temp-input');\n\n      this.element!.appendChild(input);\n    }\n\n    input.value = value;\n    return input;\n  }\n\n  /**\n   * Make a GET request.\n   */\n  get(\n    url?: Nullable<string>,\n    data?: Nullable<Record<string, any>>,\n    customMethod?: Nullable<string>,\n  ): boolean {\n    return this.submit(url, data, 'GET', customMethod);\n  }\n\n  /**\n   * Post form.\n   */\n  post(\n    url?: Nullable<string>,\n    data?: Nullable<Record<string, any>>,\n    customMethod?: Nullable<string>,\n  ) {\n    customMethod = customMethod || 'POST';\n\n    return this.submit(url, data, 'POST', customMethod);\n  }\n\n  /**\n   * Make a PUT request.\n   */\n  put(\n    url?: Nullable<string>,\n    data?: Nullable<Record<string, any>>,\n  ) {\n    return this.post(url, data, 'PUT');\n  }\n\n  /**\n   * Make a PATCH request.\n   */\n  patch(\n    url?: Nullable<string>,\n    data?: Nullable<Record<string, any>>,\n  ) {\n    return this.post(url, data, 'PATCH');\n  }\n\n  /**\n   * Make a DELETE request.\n   */\n  delete(\n    url?: Nullable<string>,\n    data?: Nullable<Record<string, any>>,\n  ) {\n    return this.post(url, data, 'DELETE');\n  }\n\n  /**\n   * @see https://stackoverflow.com/a/53739792\n   *\n   * @param {Object} ob\n   * @returns {Object}\n   */\n  static flattenObject(ob: Record<string, any>): Record<string, any> {\n    const toReturn: Record<string, any> = {};\n\n    for (let i in ob) {\n      if (!ob.hasOwnProperty(i)) {\n        continue;\n      }\n\n      if ((typeof ob[i]) === 'object' && ob[i] != null) {\n        const flatObject = this.flattenObject(ob[i]);\n\n        for (let x in flatObject) {\n          if (!flatObject.hasOwnProperty(x)) {\n            continue;\n          }\n\n          toReturn[i + '/' + x] = flatObject[x];\n        }\n      } else {\n        toReturn[i] = ob[i];\n      }\n    }\n    return toReturn;\n  }\n\n  static buildFieldName(field: string) {\n    const names = field.split('/');\n\n    const first = names.shift();\n\n    return first + names.map(name => `[${name}]`).join('');\n  }\n}\n"],"names":["data"],"mappings":"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"}