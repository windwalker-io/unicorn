{"version":3,"file":"list-dependent.js","sources":["../../src/module/list-dependent.ts"],"sourcesContent":["\r\nimport type { CancelTokenSource } from 'axios';\r\nimport { useHttpClient, useUniDirective } from '../composable';\r\nimport { getBoundedInstance, html, selectOne } from '../service';\r\nimport { mergeDeep } from '../utilities';\r\n\r\nconst nope = () => {};\r\n\r\nexport interface ListDependentOptions {\r\n  ajax: {\r\n    url: string | null | ((self: ListDependent) => string);\r\n    value_field: string;\r\n    data: Record<string, any> | ((data: Record<string, any>, self: ListDependent) => Record<string, any>);\r\n  };\r\n  source?: Record<string, any>;\r\n  text_field: string;\r\n  value_field: string;\r\n  first_option?: Record<string, any>;\r\n  default_value: any;\r\n  initial_load: boolean;\r\n  empty_mark: string;\r\n  hooks: {\r\n    before_request: (value: any, element: HTMLSelectElement, dependent: HTMLSelectElement) => any;\r\n    after_request: (value: any, element: HTMLSelectElement, dependent: HTMLSelectElement) => any;\r\n  };\r\n}\r\n\r\nconst defaultOptions: ListDependentOptions = {\r\n  ajax: {\r\n    url: null,\r\n    value_field: 'value',\r\n    data: {},\r\n  },\r\n  source: undefined,\r\n  text_field: 'title',\r\n  value_field: 'id',\r\n  first_option: undefined,\r\n  default_value: null,\r\n  initial_load: true,\r\n  empty_mark: '__EMPTY__',\r\n  hooks: {\r\n    before_request: nope,\r\n    after_request: nope\r\n  }\r\n};\r\n\r\ntype ListItems = Record<string, any>[];\r\ntype MaybeGroupedListItems = Record<string, ListItems> | ListItems;\r\n\r\nexport class ListDependent {\r\n  element: HTMLSelectElement;\r\n  dependent: HTMLSelectElement;\r\n  options: ListDependentOptions;\r\n  abortController: AbortController | null = null;\r\n\r\n  static handle(el: string | HTMLSelectElement, dependent?: string | HTMLSelectElement, options: Partial<ListDependentOptions> = {}): ListDependent {\r\n    return getBoundedInstance(el, 'list-dependent', () => {\r\n      return new this(el, dependent, options);\r\n    });\r\n  }\r\n\r\n  constructor(element: string | HTMLSelectElement, dependent?: string | HTMLSelectElement, options: Partial<ListDependentOptions> = {}) {\r\n    this.options = this.mergeOptions(options);\r\n\r\n    this.element = selectOne<HTMLSelectElement>(element)!;\r\n\r\n    if (!dependent) {\r\n      dependent = this.element.dataset.dependent || '';\r\n    }\r\n\r\n    this.dependent = selectOne<HTMLSelectElement>(dependent)!;\r\n\r\n    this.bindEvents();\r\n\r\n    if (this.options.initial_load) {\r\n      this.changeList(this.dependent.value, true);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Bind events.\r\n   */\r\n  bindEvents() {\r\n    this.dependent.addEventListener('change', (event) => {\r\n      this.changeList((event.currentTarget as HTMLSelectElement)?.value);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Update the list elements.\r\n   *\r\n   * @param {*}    value\r\n   * @param {bool} initial\r\n   */\r\n  changeList(value: string, initial = false) {\r\n    value = value || this.dependent.value;\r\n\r\n    // Empty mark\r\n    if (value === '') {\r\n      value = this.options.empty_mark;\r\n    }\r\n\r\n    if (this.options.ajax.url) {\r\n      this.ajaxUpdate(value);\r\n    } else if (this.options.source) {\r\n      this.sourceUpdate(value, initial);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Update list by source.\r\n   */\r\n  sourceUpdate(value: string, initial = false) {\r\n    const source = this.options.source;\r\n\r\n    if (!source) {\r\n      return;\r\n    }\r\n\r\n    this.beforeHook(value, this.element, this.dependent);\r\n\r\n    if (source[value]) {\r\n      this.updateListElements(source[value]);\r\n    } else {\r\n      this.updateListElements([]);\r\n\r\n      if (!initial && value !== '' && parseInt(value) !== 0) {\r\n        console.log('List for value: ' + value + ' not found.');\r\n      }\r\n    }\r\n\r\n    this.afterHook(value, this.element, this.dependent);\r\n  }\r\n\r\n  /**\r\n   * Do ajax.\r\n   *\r\n   * @param {string} value\r\n   */\r\n  async ajaxUpdate(value: string) {\r\n    let data: Record<string, any> = {};\r\n\r\n    data[this.options.ajax.value_field] = value;\r\n\r\n    if (typeof this.options.ajax.data === 'object') {\r\n      data = { ...data, ...this.options.ajax.data };\r\n    } else if (typeof this.options.ajax.data === 'function') {\r\n      data = this.options.ajax.data(data, this) || data;\r\n    }\r\n\r\n    this.beforeHook(value, this.element, this.dependent);\r\n\r\n    this.abort();\r\n\r\n    let url = this.options.ajax.url;\r\n\r\n    if (typeof url === 'function') {\r\n      url = url(this);\r\n    }\r\n\r\n    if (!url) {\r\n      throw new Error('Ajax URL is not set.');\r\n    }\r\n\r\n    const http = await useHttpClient();\r\n\r\n    this.abortController = new AbortController();\r\n\r\n    try {\r\n      const res = await http.get<{\r\n        success: boolean;\r\n        data: any;\r\n      }>(url, {\r\n        params: data,\r\n        signal: this.abortController.signal\r\n      });\r\n\r\n      const { success, data: returnData } = res.data;\r\n\r\n      if (success) {\r\n        this.updateListElements(returnData);\r\n      } else {\r\n        console.error(returnData);\r\n      }\r\n\r\n    } catch (e) {\r\n      console.error(e);\r\n    } finally {\r\n      this.afterHook(value, this.element, this.dependent);\r\n      this.abortController = null;\r\n    }\r\n  }\r\n\r\n  abort() {\r\n    if (this.abortController) {\r\n      this.abortController.abort();\r\n      this.abortController = null;\r\n    }\r\n  }\r\n\r\n  updateListElements(items: MaybeGroupedListItems) {\r\n    const textField = this.options.text_field;\r\n    const valueField = this.options.value_field;\r\n    this.element.innerHTML = '';\r\n\r\n    if (this.options.first_option && Array.isArray(items)) {\r\n      items.unshift({});\r\n      items[0][textField] = this.options.first_option[textField];\r\n      items[0][valueField] = this.options.first_option[valueField];\r\n    }\r\n\r\n    for (const i in items) {\r\n      const item = items[i as keyof typeof items] as Record<string, any> | ListItems;\r\n\r\n      if (Array.isArray(item)) {\r\n        const group = html(`<optgroup label=\"${i}\"></optgroup>`);\r\n\r\n        for (const k in item) {\r\n          const child = item[k];\r\n          this.appendOptionTo({\r\n            value: child[valueField],\r\n            text: child[textField],\r\n            attributes: child.attributes,\r\n          }, group);\r\n        }\r\n\r\n        this.element.appendChild(group);\r\n        continue;\r\n      }\r\n\r\n      this.appendOptionTo({\r\n        value: item[valueField],\r\n        text: item[textField],\r\n        attributes: item.attributes,\r\n      }, this.element);\r\n    }\r\n\r\n    this.element.dispatchEvent(new CustomEvent('change'));\r\n    this.element.dispatchEvent(new CustomEvent('list:updated'));\r\n  }\r\n\r\n  appendOptionTo(item: any, parent: any) {\r\n    const value = item.value;\r\n    const option = html('<option>' + item.text + '</option>');\r\n    option.setAttribute('value', value);\r\n\r\n    if (item.attributes) {\r\n      for (const index in item.attributes) {\r\n        const val = item.attributes[index];\r\n        option.setAttribute(index, val);\r\n      }\r\n    }\r\n\r\n    if (this.isSelected(value)) {\r\n      option.setAttribute('selected', 'selected');\r\n    }\r\n\r\n    parent.appendChild(option);\r\n  }\r\n\r\n  isSelected(value: string) {\r\n    let defaultValues: any[] = [];\r\n\r\n    // Convert all types to array\r\n    let defValue = this.element.dataset.selected ?? this.options.default_value;\r\n\r\n    if (typeof defValue === 'function') {\r\n      defValue = defValue(value, this);\r\n    }\r\n\r\n    if (Array.isArray(defValue)) {\r\n      defaultValues = defValue;\r\n    } else if (defValue && typeof defValue === 'object') {\r\n      defaultValues = Object.keys(defValue);\r\n    } else {\r\n      defaultValues = [defValue];\r\n    }\r\n\r\n    return defaultValues.indexOf(value) !== -1;\r\n  }\r\n\r\n  /**\r\n   * Before hook.\r\n   */\r\n  beforeHook(value: string, element: HTMLSelectElement, dependent: HTMLSelectElement) {\r\n    const before = this.options.hooks.before_request;\r\n\r\n    return before.call(this, value, element, dependent);\r\n  }\r\n\r\n  /**\r\n   * After hook.\r\n   */\r\n  afterHook(value: string, element: HTMLSelectElement, dependent: HTMLSelectElement) {\r\n    const after = this.options.hooks.after_request;\r\n\r\n    return after.call(this, value, element, dependent);\r\n  }\r\n\r\n  mergeOptions(options: Partial<ListDependentOptions>): ListDependentOptions {\r\n    return mergeDeep<ListDependentOptions>({}, defaultOptions, options);\r\n  }\r\n}\r\n\r\nexport const ready = useUniDirective<HTMLSelectElement>('list-dependent', {\r\n  mounted(el, binding) {\r\n    const options = JSON.parse(binding.value);\r\n\r\n    ListDependent.handle(el, options.dependent, options);\r\n  },\r\n  updated(el, binding) {\r\n    const options = JSON.parse(binding.value);\r\n\r\n    ListDependent.handle(el).mergeOptions(options);\r\n  }\r\n});\r\n\r\nexport type ListDependentModule = {\r\n  ListDependent: typeof ListDependent;\r\n  ready: typeof ready;\r\n};\r\n"],"names":[],"mappings":"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"}