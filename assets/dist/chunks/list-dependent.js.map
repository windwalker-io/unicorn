{"version":3,"file":"list-dependent.js","sources":["../../src/module/list-dependent.ts"],"sourcesContent":["\nimport type { CancelTokenSource } from 'axios';\nimport { useHttpClient, useUniDirective } from '../composable';\nimport { getBoundedInstance, html, selectOne } from '../service';\nimport { mergeDeep } from '../utilities';\n\nconst nope = () => {};\n\nexport interface ListDependentOptions {\n  ajax: {\n    url: string | null | ((self: ListDependent) => string);\n    value_field: string;\n    data: Record<string, any> | ((data: Record<string, any>, self: ListDependent) => Record<string, any>);\n  };\n  source?: Record<string, any>;\n  text_field: string;\n  value_field: string;\n  first_option?: Record<string, any>;\n  default_value: any;\n  initial_load: boolean;\n  empty_mark: string;\n  hooks: {\n    before_request: (value: any, element: HTMLSelectElement, dependent: HTMLSelectElement) => any;\n    after_request: (value: any, element: HTMLSelectElement, dependent: HTMLSelectElement) => any;\n  };\n}\n\nconst defaultOptions: ListDependentOptions = {\n  ajax: {\n    url: null,\n    value_field: 'value',\n    data: {},\n  },\n  source: undefined,\n  text_field: 'title',\n  value_field: 'id',\n  first_option: undefined,\n  default_value: null,\n  initial_load: true,\n  empty_mark: '__EMPTY__',\n  hooks: {\n    before_request: nope,\n    after_request: nope\n  }\n};\n\ntype ListItems = Record<string, any>[];\ntype MaybeGroupedListItems = Record<string, ListItems> | ListItems;\n\nexport class ListDependent {\n  element: HTMLSelectElement;\n  dependent: HTMLSelectElement;\n  options: ListDependentOptions;\n  abortController: AbortController | null = null;\n\n  static handle(el: string | HTMLSelectElement, dependent?: string | HTMLSelectElement, options: Partial<ListDependentOptions> = {}): ListDependent {\n    return getBoundedInstance(el, 'list-dependent', () => {\n      return new this(el, dependent, options);\n    });\n  }\n\n  constructor(element: string | HTMLSelectElement, dependent?: string | HTMLSelectElement, options: Partial<ListDependentOptions> = {}) {\n    this.options = this.mergeOptions(options);\n\n    this.element = selectOne<HTMLSelectElement>(element)!;\n\n    if (!dependent) {\n      dependent = this.element.dataset.dependent || '';\n    }\n\n    this.dependent = selectOne<HTMLSelectElement>(dependent)!;\n\n    this.bindEvents();\n\n    if (this.options.initial_load) {\n      this.changeList(this.dependent.value, true);\n    }\n  }\n\n  /**\n   * Bind events.\n   */\n  bindEvents() {\n    this.dependent.addEventListener('change', (event) => {\n      this.changeList((event.currentTarget as HTMLSelectElement)?.value);\n    });\n  }\n\n  /**\n   * Update the list elements.\n   *\n   * @param {*}    value\n   * @param {bool} initial\n   */\n  changeList(value: string, initial = false) {\n    value = value || this.dependent.value;\n\n    // Empty mark\n    if (value === '') {\n      value = this.options.empty_mark;\n    }\n\n    if (this.options.ajax.url) {\n      this.ajaxUpdate(value);\n    } else if (this.options.source) {\n      this.sourceUpdate(value, initial);\n    }\n  }\n\n  /**\n   * Update list by source.\n   */\n  sourceUpdate(value: string, initial = false) {\n    const source = this.options.source;\n\n    if (!source) {\n      return;\n    }\n\n    this.beforeHook(value, this.element, this.dependent);\n\n    if (source[value]) {\n      this.updateListElements(source[value]);\n    } else {\n      this.updateListElements([]);\n\n      if (!initial && value !== '' && parseInt(value) !== 0) {\n        console.log('List for value: ' + value + ' not found.');\n      }\n    }\n\n    this.afterHook(value, this.element, this.dependent);\n  }\n\n  /**\n   * Do ajax.\n   *\n   * @param {string} value\n   */\n  async ajaxUpdate(value: string) {\n    let data: Record<string, any> = {};\n\n    data[this.options.ajax.value_field] = value;\n\n    if (typeof this.options.ajax.data === 'object') {\n      data = { ...data, ...this.options.ajax.data };\n    } else if (typeof this.options.ajax.data === 'function') {\n      data = this.options.ajax.data(data, this) || data;\n    }\n\n    this.beforeHook(value, this.element, this.dependent);\n\n    this.abort();\n\n    let url = this.options.ajax.url;\n\n    if (typeof url === 'function') {\n      url = url(this);\n    }\n\n    if (!url) {\n      throw new Error('Ajax URL is not set.');\n    }\n\n    const http = await useHttpClient();\n\n    this.abortController = new AbortController();\n\n    try {\n      const res = await http.get<{\n        success: boolean;\n        data: any;\n      }>(url, {\n        params: data,\n        signal: this.abortController.signal\n      });\n\n      const { success, data: returnData } = res.data;\n\n      if (success) {\n        this.updateListElements(returnData);\n      } else {\n        console.error(returnData);\n      }\n\n    } catch (e) {\n      console.error(e);\n    } finally {\n      this.afterHook(value, this.element, this.dependent);\n      this.abortController = null;\n    }\n  }\n\n  abort() {\n    if (this.abortController) {\n      this.abortController.abort();\n      this.abortController = null;\n    }\n  }\n\n  updateListElements(items: MaybeGroupedListItems) {\n    const textField = this.options.text_field;\n    const valueField = this.options.value_field;\n    this.element.innerHTML = '';\n\n    if (this.options.first_option && Array.isArray(items)) {\n      items.unshift({});\n      items[0][textField] = this.options.first_option[textField];\n      items[0][valueField] = this.options.first_option[valueField];\n    }\n\n    for (const i in items) {\n      const item = items[i as keyof typeof items] as Record<string, any> | ListItems;\n\n      if (Array.isArray(item)) {\n        const group = html(`<optgroup label=\"${i}\"></optgroup>`);\n\n        for (const k in item) {\n          const child = item[k];\n          this.appendOptionTo({\n            value: child[valueField],\n            text: child[textField],\n            attributes: child.attributes,\n          }, group);\n        }\n\n        this.element.appendChild(group);\n        continue;\n      }\n\n      this.appendOptionTo({\n        value: item[valueField],\n        text: item[textField],\n        attributes: item.attributes,\n      }, this.element);\n    }\n\n    this.element.dispatchEvent(new CustomEvent('change'));\n    this.element.dispatchEvent(new CustomEvent('list:updated'));\n  }\n\n  appendOptionTo(item: any, parent: any) {\n    const value = item.value;\n    const option = html('<option>' + item.text + '</option>');\n    option.setAttribute('value', value);\n\n    if (item.attributes) {\n      for (const index in item.attributes) {\n        const val = item.attributes[index];\n        option.setAttribute(index, val);\n      }\n    }\n\n    if (this.isSelected(value)) {\n      option.setAttribute('selected', 'selected');\n    }\n\n    parent.appendChild(option);\n  }\n\n  isSelected(value: string) {\n    let defaultValues: any[] = [];\n\n    // Convert all types to array\n    let defValue = this.element.dataset.selected ?? this.options.default_value;\n\n    if (typeof defValue === 'function') {\n      defValue = defValue(value, this);\n    }\n\n    if (Array.isArray(defValue)) {\n      defaultValues = defValue;\n    } else if (defValue && typeof defValue === 'object') {\n      defaultValues = Object.keys(defValue);\n    } else {\n      defaultValues = [defValue];\n    }\n\n    return defaultValues.indexOf(value) !== -1;\n  }\n\n  /**\n   * Before hook.\n   */\n  beforeHook(value: string, element: HTMLSelectElement, dependent: HTMLSelectElement) {\n    const before = this.options.hooks.before_request;\n\n    return before.call(this, value, element, dependent);\n  }\n\n  /**\n   * After hook.\n   */\n  afterHook(value: string, element: HTMLSelectElement, dependent: HTMLSelectElement) {\n    const after = this.options.hooks.after_request;\n\n    return after.call(this, value, element, dependent);\n  }\n\n  mergeOptions(options: Partial<ListDependentOptions>): ListDependentOptions {\n    return mergeDeep<ListDependentOptions>({}, defaultOptions, options);\n  }\n}\n\nexport const ready = useUniDirective<HTMLSelectElement>('list-dependent', {\n  mounted(el, binding) {\n    const options = JSON.parse(binding.value);\n\n    ListDependent.handle(el, options.dependent, options);\n  },\n  updated(el, binding) {\n    const options = JSON.parse(binding.value);\n\n    ListDependent.handle(el).mergeOptions(options);\n  }\n});\n\nexport type ListDependentModule = {\n  ListDependent: typeof ListDependent;\n  ready: typeof ready;\n};\n"],"names":[],"mappings":"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"}