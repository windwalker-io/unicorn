{"version":3,"file":"field-multi-uploader.js","sources":["../../src/module/field-multi-uploader.ts"],"sourcesContent":["import { Modal } from 'bootstrap';\r\nimport type { Options } from 'sortablejs';\r\nimport {\r\n  type ComponentPublicInstance,\r\n  computed,\r\n  createApp,\r\n  defineComponent,\r\n  getCurrentInstance,\r\n  nextTick,\r\n  onMounted,\r\n  PropType,\r\n  ref,\r\n  useTemplateRef\r\n} from 'vue';\r\nimport { VueDraggable } from 'vue-draggable-plus';\r\nimport {\r\n  createItem,\r\n  ItemCard,\r\n  ItemCardPlaceholder,\r\n  MultiUploader,\r\n  MultiUploaderComposableInstance,\r\n  MultiUploaderOptions,\r\n  UploaderItem\r\n} from 'vue-multi-uploader';\r\nimport css from 'vue-multi-uploader/src/vue-multi-uploader.scss?inline';\r\nimport { useStack } from '../composable';\r\nimport { data } from '../data';\r\nimport { forceArray, injectCssToDocument } from '../service';\r\nimport { mergeDeep } from '../utilities';\r\n\r\nexport type UniMultiUploaderOptions = {\r\n  value?: any[];\r\n  uploadUrl: string;\r\n  maxFiles?: number;\r\n  maxConcurrent?: number;\r\n  thumbSize?: number;\r\n  accept?: string;\r\n  readonly: boolean;\r\n  disabled: boolean;\r\n  fieldName?: string;\r\n  fieldFullName?: string;\r\n  tmplSelector: string;\r\n  canReplace: false;\r\n  openFileHandler?: (item: UploaderItem) => void;\r\n}\r\n\r\nconst defaultOptions = {\r\n  readonly: false,\r\n  disabled: false,\r\n  sortable: false,\r\n  thumbSize: 150,\r\n  maxConcurrent: 5,\r\n  canReplace: false,\r\n  tmplSelector: '#multi-uploader-field-tmpl',\r\n};\r\n\r\nexport class MultiUploaderElement extends HTMLElement {\r\n  static is = 'uni-multi-uploader';\r\n\r\n  modalElement!: HTMLDivElement;\r\n  vm!: ComponentPublicInstance;\r\n\r\n  async connectedCallback() {\r\n    let options: Partial<UniMultiUploaderOptions> = JSON.parse(\r\n      this.getAttribute('options') || '{}'\r\n    );\r\n\r\n    const resolvedOptions: UniMultiUploaderOptions = mergeDeep({}, defaultOptions, options);\r\n\r\n    // Make some default options since PHP will send NULL\r\n    resolvedOptions.thumbSize ??= 150;\r\n\r\n    this.modalElement = this.querySelector<HTMLDivElement>('.modal')!;\r\n\r\n    const tmplSelector = resolvedOptions.tmplSelector;\r\n\r\n    const app = createApp(\r\n      createAppInstance(resolvedOptions, document.querySelector(tmplSelector)!.innerHTML, this)\r\n    );\r\n\r\n    this.vm = app.mount(this);\r\n  }\r\n}\r\n\r\nasync function init() {\r\n  injectCssToDocument(css);\r\n  customElements.define(MultiUploaderElement.is, MultiUploaderElement);\r\n}\r\nexport const ready = init();\r\n\r\nexport interface MultiUploaderModule {\r\n  MultiUploaderElement: typeof MultiUploaderElement;\r\n  ready: typeof ready;\r\n}\r\n\r\nfunction createAppInstance(opt: UniMultiUploaderOptions, tmpl: string, el: MultiUploaderElement) {\r\n  return defineComponent({\r\n    name: 'MultiUploaderFieldApp',\r\n    template: tmpl,\r\n    components: {\r\n      VueDraggable,\r\n      MultiUploader,\r\n      ItemCard,\r\n      ItemCardPlaceholder,\r\n    },\r\n    props: {\r\n      stackName: String as PropType<string>,\r\n    },\r\n    setup(props, { expose }) {\r\n      const options = ref<UniMultiUploaderOptions>(opt);\r\n      const current = ref<UploaderItem>();\r\n      const currentIndex = ref<number>();\r\n      const loading = ref(false);\r\n      const dragarea = ref<HTMLDivElement>();\r\n      const modal = ref<HTMLDivElement>();\r\n      const app = getCurrentInstance();\r\n      const uploader = useTemplateRef<typeof MultiUploader>('uploader');\r\n      const canModify = computed(() => !options.value.disabled && !options.value.readonly);\r\n      const instance = ref<MultiUploaderComposableInstance>();\r\n\r\n      onMounted(() => {\r\n        instance.value = uploader.value!.instance;\r\n\r\n        domEmit('multi-uploader:mounted', { app, uploader });\r\n      });\r\n\r\n      const items = ref<UploaderItem[]>([]);\r\n\r\n      for (let item of forceArray(options.value.value)) {\r\n        if (typeof item === 'string') {\r\n          item = {\r\n            url: item\r\n          };\r\n        }\r\n\r\n        const uploadItem = createItem({\r\n          url: item.url || '',\r\n          thumbUrl: item.thumbUrl || item.thumb_url || item.url || '',\r\n          data: item\r\n        });\r\n\r\n        items.value.push(uploadItem);\r\n      }\r\n\r\n      const uploadUrl = options.value.uploadUrl;\r\n      const value = items.value;\r\n      const uploaderOptions = ref<MultiUploaderOptions>({\r\n        maxFiles: () => options.value.maxFiles,\r\n        readonly: () => options.value.readonly,\r\n        disabled: () => options.value.disabled,\r\n        accept: () => options.value.accept,\r\n        maxConcurrent: () => options.value.maxConcurrent,\r\n        prepareXhr(xhr) {\r\n          xhr.setRequestHeader(\r\n            'X-CSRF-TOKEN',\r\n            data('csrf-token')\r\n          );\r\n        },\r\n        onItemUploadSuccess(item, xhr) {\r\n          const res = JSON.parse(xhr.responseText);\r\n          item.url = res.data.url;\r\n          item.thumbUrl = res.data.thumbUrl || res.data.thumb_url || res.data.url;\r\n          item.data = res.data;\r\n          item.data.title ??= item.url.split('/').pop()?.split('?').shift() || '';\r\n        }\r\n      });\r\n      const draggableOptions: Options = {\r\n        draggable: '.c-drag-item',\r\n        animation: 300,\r\n        disabled: !canModify.value,\r\n      };\r\n\r\n      function openFile(item: UploaderItem) {\r\n        if (options.value.openFileHandler) {\r\n          options.value.openFileHandler(item);\r\n        } else {\r\n          window.open(item.download_url || item.url);\r\n        }\r\n      }\r\n\r\n      async function itemClick(item: UploaderItem, i: number, event: MouseEvent) {\r\n        current.value = item;\r\n        currentIndex.value = i;\r\n\r\n        domEmit('item-click', { item, i });\r\n\r\n        nextTick().then(() => {\r\n          Modal.getOrCreateInstance(modal.value!).show();\r\n        });\r\n        // this.$options.metaModal.modal('show');\r\n      }\r\n\r\n      function metaSave() {\r\n        current.value = undefined;\r\n        currentIndex.value = undefined;\r\n\r\n        // nextTick().then(() => {\r\n        // new bootstrap.Modal(modal.value).hide();\r\n        // });\r\n        // this.$options.metaModal.modal('hide');\r\n      }\r\n\r\n      function isImage(url: string) {\r\n        const ext = url.split('.').pop()!.split('?').shift() || '';\r\n        const allow = ['png', 'jpeg', 'jpg', 'gif', 'bmp', 'webp'];\r\n\r\n        return allow.indexOf(ext.toLowerCase()) !== -1;\r\n      }\r\n\r\n      function dragover(e: DragEvent) {\r\n        if (!options.value.canReplace) {\r\n          return;\r\n        }\r\n\r\n        dragarea.value!.style.opacity = '0.75';\r\n      }\r\n\r\n      function dragleave(e: DragEvent) {\r\n        if (!options.value.canReplace) {\r\n          return;\r\n        }\r\n\r\n        dragarea.value!.style.opacity = '1';\r\n      }\r\n\r\n      function drop(event: DragEvent) {\r\n        if (!options.value.canReplace) {\r\n          return;\r\n        }\r\n\r\n        dragarea.value!.style.opacity = '1';\r\n        const item = current.value;\r\n        const file = event.dataTransfer?.files[0] || null;\r\n\r\n        if (!file) {\r\n          return;\r\n        }\r\n\r\n        instance.value!.checkFile(file);\r\n\r\n        if (instance.value!.isReadonly) {\r\n          return;\r\n        }\r\n\r\n        item!.file = file;\r\n\r\n        loading.value = true;\r\n\r\n        try {\r\n          instance.value!.uploadFile(item!);\r\n        } finally {\r\n          loading.value = false;\r\n        }\r\n      }\r\n\r\n      function uploading() {\r\n        useStack(props.stackName).push(true);\r\n\r\n        domEmit('uploading');\r\n      }\r\n\r\n      function uploaded() {\r\n        useStack(props.stackName).pop();\r\n\r\n        domEmit('uploaded');\r\n      }\r\n\r\n      function onChange(item: UploaderItem) {\r\n        domEmit('change', item);\r\n      }\r\n\r\n      function domEmit(event: string, detail?: any) {\r\n        el.dispatchEvent(new CustomEvent(event, { detail }));\r\n      }\r\n\r\n      const foo = ref<string>();\r\n\r\n      foo.value = 'Bar';\r\n\r\n      const icons = ref<Record<string, string>>({\r\n        default: 'fas fa-file',\r\n        pdf: 'fas fa-file-pdf text-danger',\r\n        xls: 'fas fa-file-excel text-success',\r\n        xlsx: 'fas fa-file-excel text-success',\r\n        doc: 'fas fa-file-word text-primary',\r\n        docx: 'fas fa-file-word text-primary',\r\n        ppt: 'fas fa-file-powerpoint text-warning',\r\n        pptx: 'fas fa-file-powerpoint text-warning',\r\n        zip: 'fas fa-file-archive text-dark',\r\n        '7z': 'fas fa-file-archive text-dark',\r\n        rar: 'fas fa-file-archive text-dark',\r\n        mp4: 'fas fa-file-video text-dark',\r\n        avi: 'fas fa-file-video text-dark',\r\n        flv: 'fas fa-file-video text-dark',\r\n        mov: 'fas fa-file-video text-dark',\r\n        ogg: 'fas fa-file-video text-dark',\r\n        webm: 'fas fa-file-video text-dark',\r\n        mpg: 'fas fa-file-video text-dark',\r\n        mp3: 'fas fa-file-audio text-dark',\r\n        acc: 'fas fa-file-audio text-dark',\r\n        wav: 'fas fa-file-audio text-dark',\r\n      });\r\n\r\n      function setIcons(newIcons: Record<string, string>, merge = true) {\r\n        if (merge) {\r\n          icons.value = { ...icons.value, ...newIcons };\r\n          return;\r\n        }\r\n\r\n        icons.value = newIcons;\r\n      }\r\n\r\n      expose({\r\n        uploader,\r\n        instance,\r\n        value,\r\n        canModify,\r\n        openFile,\r\n        itemClick,\r\n        isImage,\r\n        setIcons,\r\n      });\r\n\r\n      function fileIcon(item: UploaderItem) {\r\n        let path = item.file ? item.file.name : item.url;\r\n\r\n        // strip query\r\n        path = String(path).split('?')[0];\r\n\r\n        // Get extension\r\n        const ext = path.split('.').pop() || '';\r\n\r\n        const def = 'default' in icons ? icons.default : 'fas fa-file';\r\n\r\n        return icons[String(ext || 'default').toLowerCase() as keyof typeof icons] || def;\r\n      }\r\n\r\n      return {\r\n        uploader,\r\n        uploadUrl,\r\n        value,\r\n        uploaderOptions,\r\n        draggableOptions,\r\n        modal,\r\n        dragarea,\r\n        options,\r\n        current,\r\n        currentIndex,\r\n        loading,\r\n        instance,\r\n        canModify,\r\n\r\n        openFile,\r\n        itemClick,\r\n        metaSave,\r\n        isImage,\r\n        dragover,\r\n        dragleave,\r\n        drop,\r\n        uploading,\r\n        uploaded,\r\n        onChange,\r\n        domEmit,\r\n        fileIcon,\r\n      };\r\n    }\r\n  });\r\n}\r\n"],"names":[],"mappings":";;;;;;AA8CA,MAAM,iBAAiB;AAAA,EACrB,UAAU;AAAA,EACV,UAAU;AAAA,EACV,UAAU;AAAA,EACV,WAAW;AAAA,EACX,eAAe;AAAA,EACf,YAAY;AAAA,EACZ,cAAc;AAChB;AAEO,MAAM,6BAA6B,YAAY;AAAA,EACpD,OAAO,KAAK;AAAA,EAEZ;AAAA,EACA;AAAA,EAEA,MAAM,oBAAoB;AACxB,QAAI,UAA4C,KAAK;AAAA,MACnD,KAAK,aAAa,SAAS,KAAK;AAAA,IAAA;AAGlC,UAAM,kBAA2C,UAAU,IAAI,gBAAgB,OAAO;AAGtF,oBAAgB,cAAc;AAE9B,SAAK,eAAe,KAAK,cAA8B,QAAQ;AAE/D,UAAM,eAAe,gBAAgB;AAErC,UAAM,MAAM;AAAA,MACV,kBAAkB,iBAAiB,SAAS,cAAc,YAAY,EAAG,WAAW,IAAI;AAAA,IAAA;AAG1F,SAAK,KAAK,IAAI,MAAM,IAAI;AAAA,EAC1B;AACF;AAEA,eAAe,OAAO;AACpB,sBAAoB,GAAG;AACvB,iBAAe,OAAO,qBAAqB,IAAI,oBAAoB;AACrE;AACO,MAAM,QAAQ,qBAAA;AAOrB,SAAS,kBAAkB,KAA8B,MAAc,IAA0B;AAC/F,SAAO,gBAAgB;AAAA,IACrB,MAAM;AAAA,IACN,UAAU;AAAA,IACV,YAAY;AAAA,MACV;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IAAA;AAAA,IAEF,OAAO;AAAA,MACL,WAAW;AAAA,IAAA;AAAA,IAEb,MAAM,OAAO,EAAE,UAAU;AACvB,YAAM,UAAU,IAA6B,GAAG;AAChD,YAAM,UAAU,IAAA;AAChB,YAAM,eAAe,IAAA;AACrB,YAAM,UAAU,IAAI,KAAK;AACzB,YAAM,WAAW,IAAA;AACjB,YAAM,QAAQ,IAAA;AACd,YAAM,MAAM,mBAAA;AACZ,YAAM,WAAW,eAAqC,UAAU;AAChE,YAAM,YAAY,SAAS,MAAM,CAAC,QAAQ,MAAM,YAAY,CAAC,QAAQ,MAAM,QAAQ;AACnF,YAAM,WAAW,IAAA;AAEjB,gBAAU,MAAM;AACd,iBAAS,QAAQ,SAAS,MAAO;AAEjC,gBAAQ,0BAA0B,EAAE,KAAK,SAAA,CAAU;AAAA,MACrD,CAAC;AAED,YAAM,QAAQ,IAAoB,EAAE;AAEpC,eAAS,QAAQ,WAAW,QAAQ,MAAM,KAAK,GAAG;AAChD,YAAI,OAAO,SAAS,UAAU;AAC5B,iBAAO;AAAA,YACL,KAAK;AAAA,UAAA;AAAA,QAET;AAEA,cAAM,aAAa,WAAW;AAAA,UAC5B,KAAK,KAAK,OAAO;AAAA,UACjB,UAAU,KAAK,YAAY,KAAK,aAAa,KAAK,OAAO;AAAA,UACzD,MAAM;AAAA,QAAA,CACP;AAED,cAAM,MAAM,KAAK,UAAU;AAAA,MAC7B;AAEA,YAAM,YAAY,QAAQ,MAAM;AAChC,YAAM,QAAQ,MAAM;AACpB,YAAM,kBAAkB,IAA0B;AAAA,QAChD,UAAU,MAAM,QAAQ,MAAM;AAAA,QAC9B,UAAU,MAAM,QAAQ,MAAM;AAAA,QAC9B,UAAU,MAAM,QAAQ,MAAM;AAAA,QAC9B,QAAQ,MAAM,QAAQ,MAAM;AAAA,QAC5B,eAAe,MAAM,QAAQ,MAAM;AAAA,QACnC,WAAW,KAAK;AACd,cAAI;AAAA,YACF;AAAA,YACA,KAAK,YAAY;AAAA,UAAA;AAAA,QAErB;AAAA,QACA,oBAAoB,MAAM,KAAK;AAC7B,gBAAM,MAAM,KAAK,MAAM,IAAI,YAAY;AACvC,eAAK,MAAM,IAAI,KAAK;AACpB,eAAK,WAAW,IAAI,KAAK,YAAY,IAAI,KAAK,aAAa,IAAI,KAAK;AACpE,eAAK,OAAO,IAAI;AAChB,eAAK,KAAK,UAAU,KAAK,IAAI,MAAM,GAAG,EAAE,IAAA,GAAO,MAAM,GAAG,EAAE,WAAW;AAAA,QACvE;AAAA,MAAA,CACD;AACD,YAAM,mBAA4B;AAAA,QAChC,WAAW;AAAA,QACX,WAAW;AAAA,QACX,UAAU,CAAC,UAAU;AAAA,MAAA;AAGvB,eAAS,SAAS,MAAoB;AACpC,YAAI,QAAQ,MAAM,iBAAiB;AACjC,kBAAQ,MAAM,gBAAgB,IAAI;AAAA,QACpC,OAAO;AACL,iBAAO,KAAK,KAAK,gBAAgB,KAAK,GAAG;AAAA,QAC3C;AAAA,MACF;AAEA,qBAAe,UAAU,MAAoB,GAAW,OAAmB;AACzE,gBAAQ,QAAQ;AAChB,qBAAa,QAAQ;AAErB,gBAAQ,cAAc,EAAE,MAAM,EAAA,CAAG;AAEjC,iBAAA,EAAW,KAAK,MAAM;AACpB,gBAAM,oBAAoB,MAAM,KAAM,EAAE,KAAA;AAAA,QAC1C,CAAC;AAAA,MAEH;AAEA,eAAS,WAAW;AAClB,gBAAQ,QAAQ;AAChB,qBAAa,QAAQ;AAAA,MAMvB;AAEA,eAAS,QAAQ,KAAa;AAC5B,cAAM,MAAM,IAAI,MAAM,GAAG,EAAE,IAAA,EAAO,MAAM,GAAG,EAAE,MAAA,KAAW;AACxD,cAAM,QAAQ,CAAC,OAAO,QAAQ,OAAO,OAAO,OAAO,MAAM;AAEzD,eAAO,MAAM,QAAQ,IAAI,YAAA,CAAa,MAAM;AAAA,MAC9C;AAEA,eAAS,SAAS,GAAc;AAC9B,YAAI,CAAC,QAAQ,MAAM,YAAY;AAC7B;AAAA,QACF;AAEA,iBAAS,MAAO,MAAM,UAAU;AAAA,MAClC;AAEA,eAAS,UAAU,GAAc;AAC/B,YAAI,CAAC,QAAQ,MAAM,YAAY;AAC7B;AAAA,QACF;AAEA,iBAAS,MAAO,MAAM,UAAU;AAAA,MAClC;AAEA,eAAS,KAAK,OAAkB;AAC9B,YAAI,CAAC,QAAQ,MAAM,YAAY;AAC7B;AAAA,QACF;AAEA,iBAAS,MAAO,MAAM,UAAU;AAChC,cAAM,OAAO,QAAQ;AACrB,cAAM,OAAO,MAAM,cAAc,MAAM,CAAC,KAAK;AAE7C,YAAI,CAAC,MAAM;AACT;AAAA,QACF;AAEA,iBAAS,MAAO,UAAU,IAAI;AAE9B,YAAI,SAAS,MAAO,YAAY;AAC9B;AAAA,QACF;AAEA,aAAM,OAAO;AAEb,gBAAQ,QAAQ;AAEhB,YAAI;AACF,mBAAS,MAAO,WAAW,IAAK;AAAA,QAClC,UAAA;AACE,kBAAQ,QAAQ;AAAA,QAClB;AAAA,MACF;AAEA,eAAS,YAAY;AACnB,iBAAS,MAAM,SAAS,EAAE,KAAK,IAAI;AAEnC,gBAAQ,WAAW;AAAA,MACrB;AAEA,eAAS,WAAW;AAClB,iBAAS,MAAM,SAAS,EAAE,IAAA;AAE1B,gBAAQ,UAAU;AAAA,MACpB;AAEA,eAAS,SAAS,MAAoB;AACpC,gBAAQ,UAAU,IAAI;AAAA,MACxB;AAEA,eAAS,QAAQ,OAAe,QAAc;AAC5C,WAAG,cAAc,IAAI,YAAY,OAAO,EAAE,OAAA,CAAQ,CAAC;AAAA,MACrD;AAEA,YAAM,MAAM,IAAA;AAEZ,UAAI,QAAQ;AAEZ,YAAM,QAAQ,IAA4B;AAAA,QACxC,SAAS;AAAA,QACT,KAAK;AAAA,QACL,KAAK;AAAA,QACL,MAAM;AAAA,QACN,KAAK;AAAA,QACL,MAAM;AAAA,QACN,KAAK;AAAA,QACL,MAAM;AAAA,QACN,KAAK;AAAA,QACL,MAAM;AAAA,QACN,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,MAAM;AAAA,QACN,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,MAAA,CACN;AAED,eAAS,SAAS,UAAkC,QAAQ,MAAM;AAChE,YAAI,OAAO;AACT,gBAAM,QAAQ,EAAE,GAAG,MAAM,OAAO,GAAG,SAAA;AACnC;AAAA,QACF;AAEA,cAAM,QAAQ;AAAA,MAChB;AAEA,aAAO;AAAA,QACL;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MAAA,CACD;AAED,eAAS,SAAS,MAAoB;AACpC,YAAI,OAAO,KAAK,OAAO,KAAK,KAAK,OAAO,KAAK;AAG7C,eAAO,OAAO,IAAI,EAAE,MAAM,GAAG,EAAE,CAAC;AAGhC,cAAM,MAAM,KAAK,MAAM,GAAG,EAAE,SAAS;AAErC,cAAM,MAAM,aAAa,QAAQ,MAAM,UAAU;AAEjD,eAAO,MAAM,OAAO,OAAO,SAAS,EAAE,YAAA,CAAmC,KAAK;AAAA,MAChF;AAEA,aAAO;AAAA,QACL;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QAEA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MAAA;AAAA,IAEJ;AAAA,EAAA,CACD;AACH;"}